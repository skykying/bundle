package cute.gui;

/**
 *  .
 * User: Koushik Sen (ksen@cs.uiuc.edu)
 * Date: Nov 4, 2005
 * Time: 11:05:35 PM
 */
/*
**  CoverageView.java
**  Fri Nov 04 23:04:23 CST 2005
**
**  Generated by Data Representations' Simplicity for Java(tm)
**  Tryout Version
**
**
*/

import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class CoverageView extends JPanel {


	/**
	 * 
	 */
	private static final long serialVersionUID = 6424213300399867860L;
	public JLabel ll2 = new JLabel("Total functions invoked : ");
	public JLabel ll3 = new JLabel("Total branches covered : ");
	public JLabel ll4 = new JLabel("Percentage of branches covered : ");
	public JLabel ll5 = new JLabel("Total number of execution paths : ");
    public JLabel ll6 = new JLabel("Total runtime in milliseconds : ");
    public JTextField l2 = new JTextField(12);
    public JTextField l3 = new JTextField(12);
    public JTextField l4 = new JTextField(12);
    public JTextField l5 = new JTextField(12);
    public JTextField l6 = new JTextField(12);

    public JLabel countRacesL = new JLabel("Number of fields having race : ");
    public JLabel racesL = new JLabel("Number of execution paths having data-races : ");
    public JLabel deadlocksL = new JLabel("Number of deadlocked execution paths : ");
    public JLabel assertionsL = new JLabel("Number of execution paths violating jCUTE assertion : ");
    public JLabel exceptionsL = new JLabel("Number of execution paths throwing an Exception : ");
    public JLabel countExceptionsL = new JLabel("Number of distinct exceptions thrown : ");
    public JLabel totalL = new JLabel("Total number of erroneous execution paths : ");

    public JTextField countRaces = new JTextField(6);
    public JTextField races = new JTextField(6);
    public JTextField deadlocks = new JTextField(6);
    public JTextField assertions = new JTextField(6);
    public JTextField exceptions = new JTextField(6);
    public JTextField countExceptions = new JTextField(6);
    public JTextField total = new JTextField(6);

    JPanel errorSummary = new JPanel(new GridBagLayout());
    JPanel coverageSummary = new JPanel(new GridBagLayout());
    JPanel detailedCoverage = new JPanel(new BorderLayout(5,5));
	public JList l1 = new JList();
	JScrollPane detailedCoverageScrollPanel = new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
    public DefaultListModel lm;
    Border loweredetched = BorderFactory.createEtchedBorder(EtchedBorder.LOWERED);

	public CoverageView() {
        setLayout(new GridBagLayout());
        coverageSummary.add(ll2,new GridBagConstraints(0,0,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(ll3,new GridBagConstraints(0,1,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(ll4,new GridBagConstraints(0,2,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(ll5,new GridBagConstraints(0,3,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(ll6,new GridBagConstraints(0,4,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(l2,new GridBagConstraints(1,0,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(l3,new GridBagConstraints(1,1,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(l4,new GridBagConstraints(1,2,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(l5,new GridBagConstraints(1,3,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        coverageSummary.add(l6,new GridBagConstraints(1,4,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));

        errorSummary.add(totalL,new GridBagConstraints(0,0,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(assertionsL,new GridBagConstraints(0,1,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(deadlocksL,new GridBagConstraints(0,2,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(exceptionsL,new GridBagConstraints(0,3,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(racesL,new GridBagConstraints(0,4,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(countRacesL,new GridBagConstraints(0,5,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(countExceptionsL,new GridBagConstraints(0,6,1,1,1.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));

        errorSummary.add(total,new GridBagConstraints(1,0,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(assertions,new GridBagConstraints(1,1,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(deadlocks,new GridBagConstraints(1,2,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(exceptions,new GridBagConstraints(1,3,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(races,new GridBagConstraints(1,4,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(countRaces,new GridBagConstraints(1,5,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));
        errorSummary.add(countExceptions,new GridBagConstraints(1,6,1,1,0.0,0.0,GridBagConstraints.WEST,GridBagConstraints.NONE,new Insets(0,2,2,2),0,0));

        l2.setEditable(false);
        l2.setHorizontalAlignment(JTextField.RIGHT);
        l3.setEditable(false);
        l3.setHorizontalAlignment(JTextField.RIGHT);
        l4.setEditable(false);
        l4.setHorizontalAlignment(JTextField.RIGHT);
        l5.setEditable(false);
        l5.setHorizontalAlignment(JTextField.RIGHT);
        l6.setEditable(false);
        l6.setHorizontalAlignment(JTextField.RIGHT);

        total.setEditable(false);
        total.setHorizontalAlignment(JTextField.RIGHT);
        assertions.setEditable(false);
        assertions.setHorizontalAlignment(JTextField.RIGHT);
        exceptions.setEditable(false);
        exceptions.setHorizontalAlignment(JTextField.RIGHT);
        deadlocks.setEditable(false);
        deadlocks.setHorizontalAlignment(JTextField.RIGHT);
        races.setEditable(false);
        races.setHorizontalAlignment(JTextField.RIGHT);
        countRaces.setEditable(false);
        countRaces.setHorizontalAlignment(JTextField.RIGHT);
        countExceptions.setEditable(false);
        countExceptions.setHorizontalAlignment(JTextField.RIGHT);


        l1.setVisibleRowCount(10);
		l1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		detailedCoverageScrollPanel.setViewportView(l1);
//        detailedCoverageScrollPanel.setPreferredSize(new Dimension(600,200));
        lm = new DefaultListModel();
        l1.setModel(lm);

        TitledBorder tb1 = null;
        tb1 = BorderFactory.createTitledBorder(loweredetched, "Coverage Summary");
        tb1.setTitleJustification(TitledBorder.LEFT);
        coverageSummary.setBorder(tb1);

        tb1 = BorderFactory.createTitledBorder(loweredetched, "Summary of Bugs Found");
        tb1.setTitleJustification(TitledBorder.LEFT);
        errorSummary.setBorder(tb1);

        tb1 = BorderFactory.createTitledBorder(loweredetched, "Coverage Details");
        tb1.setTitleJustification(TitledBorder.LEFT);
        detailedCoverage.setBorder(tb1);
        detailedCoverage.add("Center",detailedCoverageScrollPanel);

        add(errorSummary,
                new GridBagConstraints(0,0,1,1,1.0,0.0,
                        GridBagConstraints.WEST, GridBagConstraints.BOTH,
                        new Insets(0,2,2,2),0,0));
        add(coverageSummary,
                new GridBagConstraints(1,0,1,1,1.0,0.0,
                        GridBagConstraints.WEST, GridBagConstraints.BOTH,
                        new Insets(0,2,2,2),0,0));
        add(detailedCoverage,
                new GridBagConstraints(0,1,2,1,1.0,1.0,
                        GridBagConstraints.WEST, GridBagConstraints.BOTH,
                        new Insets(0,2,2,2),0,0));

    }

}
