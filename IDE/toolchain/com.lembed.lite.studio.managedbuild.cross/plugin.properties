###############################################################################
# Copyright (c) 2009 Wind River Systems and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#Doug Schaefer (Wind River) - initial API and implementation
#IBM Corporation
###############################################################################

bundle.name = Lite Studio C/C++ Cross Compiler
bundle.vendor = Lembed Electronic

toolchain.name = ARM Cortex-M GCC (built-in)
option.toolchain.default = Toolchain default
option.toolchain.command.c = C compiler
option.toolchain.command.cpp = C++ compiler
option.toolchain.command.ar = Archiver
option.toolchain.command.objcopy = Hex / Bin converter
option.toolchain.command.listing = Listing generator
option.toolchain.command.size = Size command
option.toolchain.command.make = Build command
option.toolchain.command.rm = Remove command
optionCategory.target = Target Processor
option.target.arm.family = ARM family
option.target.arm.architecture = Architecture
option.target.arm.thumb = Thumb (-mthumb)
option.target.arm.instructionset = Instruction set
option.target.arm.instructionset.thumb = Thumb (-mthumb)
option.target.arm.instructionset.arm = ARM (-marm)
option.target.arm.instructionset.default = Toolchain default
option.target.arm.thumbInterwork = Thumb interwork (-mthumb - interwork)
option.target.arm.endianness = Endianness
option.target.arm.endianness.default = Toolchain default
option.target.arm.endianness.little = Little endian (-mlittle - endian)
option.target.arm.endianness.big = Big endian (-mbig - endian)
option.target.arm.floatABI = Float ABI
option.target.arm.floatABI.default = Toolchain default
option.target.arm.floatABI.soft = Library (soft)
option.target.arm.floatABI.softfp = Library with FP (softfp)
option.target.arm.floatABI.hard = FP instructions (hard) 
option.target.arm.fpuType = FPU Type
option.target.arm.fpuType.default = Toolchain default
option.target.arm.fpuType.fpa = fpa (deprecated)
option.target.arm.fpuType.fpe2 = fpe2 (deprecated)
option.target.arm.fpuType.fpe3 = fpe3 (deprecated)
option.target.arm.fpuType.maverick = maverick (deprecated)
option.target.arm.fpuType.vfp = vfp
option.target.arm.fpuType.vfpv3 = vfpv3
option.target.arm.fpuType.vfpv3fp16 = vfpv3 - fp16
option.target.arm.fpuType.vfpv3d16 = vfpv3 - d16
option.target.arm.fpuType.vfpv3d16fp16 = vfpv3 - d16 - fp16
option.target.arm.fpuType.vfpv3xd = vfpv3xd
option.target.arm.fpuType.vfpv3xdfp16 = vfpv3xd - fp16
option.target.arm.fpuType.neon = neon
option.target.arm.fpuType.neonfp16 = neon - fp16
option.target.arm.fpuType.vfpv4 = vfpv4
option.target.arm.fpuType.vfpv4d16 = vfpv4 - d16
option.target.arm.fpuType.fpv4spd16 = fpv4 - sp - d16
option.target.arm.fpuType.neonvfpv4 = neon - vfpv4
option.target.arm.fpuType.fpv5d16 = fpv5 - d16
option.target.arm.fpuType.fpv5spd16 = fpv5 - sp - d16
option.target.arm.fpuType.fparmv8 = fp - armv8
option.target.arm.fpuType.neonfparmv8 = neon - fp - armv8
option.target.arm.fpuType.cryptoneonfparmv8 = crypto - neon - fp - armv8

option.target.arm.unalignedaccess = Unaligned access
option.target.arm.unalignedaccess.enabled = Enabled (-munaligned - access)
option.target.arm.unalignedaccess.disabled = Disabled (-mno - unaligned - access)
option.target.arm.unalignedaccess.default = Toolchain default

option.target.aarch64.family = AArch64 family
option.target.aarch64.feature.crc = Feature crc
option.target.aarch64.feature.crc.enabled = Enabled (+crc)
option.target.aarch64.feature.crc.disabled = Disabled (+nocrc)
option.target.aarch64.feature.crc.default = Toolchain default
option.target.aarch64.feature.crypto = Feature crypto
option.target.aarch64.feature.crypto.enabled = Enabled (+crypto)
option.target.aarch64.feature.crypto.disabled = Disabled (+nocrypto)
option.target.aarch64.feature.crypto.default = Toolchain default
option.target.aarch64.feature.fp = Feature fp
option.target.aarch64.feature.fp.enabled = Enabled (+fp)
option.target.aarch64.feature.fp.disabled = Disabled (+nofp)
option.target.aarch64.feature.fp.default = Toolchain default
option.target.aarch64.feature.simd = Feature simd
option.target.aarch64.feature.simd.enabled = Enabled (+simd)
option.target.aarch64.feature.simd.disabled = Disabled (+nosimd)
option.target.aarch64.feature.simd.default = Toolchain default
option.target.aarch64.cmodel = Code model
option.target.aarch64.cmodel.tiny = Tiny (-mcmodel = tiny)
option.target.aarch64.cmodel.small = Small (-mcmodel = small)
option.target.aarch64.cmodel.large = Large (-mcmodel = large)
option.target.aarch64.cmodel.default = Toolchain default

option.target.aarch64.strictalign = Strict align (-mstrict - align)

option.target.other = Other target flags

optionCategory.optimization = Optimization
option.optimization.level = Optimization Level
option.optimization.level.none = None (-O0)
option.optimization.level.optimize = Optimize (-O1)
option.optimization.level.more = Optimize more (-O2)
option.optimization.level.most = Optimize most (-O3)
option.optimization.level.size = Optimize size (-Os)
option.optimization.level.debug = Optimize for debug (-Og)
option.optimization.messagelength = Message length (-fmessage - length = 0)
option.optimization.signedchar = 'char' is signed (-fsigned - char)
option.optimization.functionsections = Function sections (-ffunction - sections)
option.optimization.datasections = Data sections (-fdata - sections)
option.optimization.nocommon = No common unitialized (-fno - common)
option.optimization.noinlinefunctions = Do not inline functions (-fno - inline - functions)
option.optimization.freestanding = Assume freestanding environment (-ffreestanding)
option.optimization.nobuiltin = Disable builtin (-fno - builtin)
option.optimization.spconstant = Single precision constants (-fsingle - precision - constant)
option.optimization.PIC = Position independent code (-fPIC)
option.optimization.lto = Link - time optimizer (-flto)
option.optimization.nomoveloopinvariants = Disable loop invariant move (-fno - move - loop - invariants)
option.optimization.other = Other optimization flags


optionCategory.warnings = Warnings
option.warnings.syntaxonly = Check syntax only (-fsyntax - only)
option.warnings.pedantic = Pedantic (-pedantic)
option.warnings.pedanticerrors = Pedantic warnings as errors (-pedantic - errors)
option.warnings.allwarn = Enable all common warnings (-Wall)
option.warnings.extrawarn = Enable extra warnings (-Wextra)

option.warnings.conversion = Warn on implicit conversions (-Wconversion)
#option.warnings.unitialized = Warn on uninitialized variables (-Wuninitialised)
option.warnings.uninitialized = Warn on uninitialized variables (-Wuninitialised)
option.warnings.unused = Warn on various unused elements (-Wunused)
option.warnings.padded = Warn if padding is included (-Wpadded)
option.warnings.floatequal = Warn if floats are compared as equal (-Wfloat - equal)
option.warnings.shadow = Warn if shadowed variable (-Wshadow)
option.warnings.pointerarith = Warn if pointer arithmetic (-Wpointer - arith)
option.warnings.badfunctioncast = Warn if wrong cast(-Wbad - function - cast)
option.warnings.logicalop = Warn if suspicious logical ops (-Wlogical - op)
option.warnings.agreggatereturn = Warn if struct is returned (-Wagreggate - return)
option.warnings.missingdeclaration = Warn on undeclared global function (-Wmissing - declaration)
option.warnings.strictprototypes = Warn if a function has no arg type (-Wstrict - prototypes)
option.warnings.missingprototypes = Warn if a global function has no prototype (-Wmissing - prototypes)

option.warnings.toerrors = Generate errors instead of warnings (-Werror)
option.warnings.nowarn = Inhibit all warnings (-w)
option.warnings.other = Other warning flags

optionCategory.debugging = Debugging
option.debugging.level = Debug level
option.debugging.level.none = None
option.debugging.level.minimal = Minimal (-g1)
option.debugging.level.default = Default (-g)
option.debugging.level.max = Maximum (-g3)

option.debugging.format = Debug format
option.debugging.default = Toolchain default
option.debugging.gdb = gdb
option.debugging.stabs = stabs
option.debugging.stabsplus = stabs +
option.debugging.dwarf2 = dwarf - 2
option.debugging.dwarf3 = dwarf - 3
option.debugging.dwarf4 = dwarf - 4

option.debugging.prof = Generate prof information (-p)
option.debugging.gprof = Generate gprof information (-pg)
option.debugging.other = Other debugging flags


optionCategory.general = General

tool.assembler =  GNU Assembler
option.assembler.other = Other assembler flags
option.assembler.flags = Assembler flags
option.assembler.usepreprocessor = Use preprocessor

tool.c.compiler =  GNU C Compiler
tool.cpp.compiler =  GNU C++ Compiler
optionCategory.compiler.preprocessor = Preprocessor
optionCategory.compiler.dirs = Includes
optionCategory.compiler.optimization = Optimization
optionCategory.compiler.warnings = Warnings
optionCategory.compiler.misc = Miscellaneous


option.compiler.asmlisting = Generate assembler listing (-Wa, -adhlns = "$@.lst")
option.compiler.savetemps = Save temporary files (--save - temps Use with caution!)
option.compiler.verbose = Verbose (-v)
option.compiler.optimizationlevel = Optimization Level
option.compiler.optimizationlevel.none = None (-O0)
option.compiler.optimizationlevel.optimize = Optimize (-O1)
option.compiler.optimizationlevel.more = Optimize more (-O2)
option.compiler.optimizationlevel.most = Optimize most (-O3)
option.compiler.optimizationlevel.size = Optimize size (-Os)
option.compiler.optimizationlevel.debug = Optimize for debugg (-Og)


option.compiler.nostdinc = Do not search system directories (-nostdinc)
option.compiler.defs = Defined symbols (-D)
option.compiler.undefs = Undefined symbols (-U)
option.compiler.preprocessonly = Preprocess only (-E)
option.compiler.include.paths = Include paths (-I)
option.compiler.include.files = Include files (-include)
option.compiler.other = Other compiler flags

option.cpp.compiler.nortti = Do not use RTTI (-fno - rtti)
option.cpp.compiler.noexceptions = Do not use exceptions (-fno - exceptions)
option.cpp.compiler.nothreadsafestatics = Do not use thread - safe statics (-fno - threadsafe - statics)
option.cpp.compiler.nousecxaatexit = Do not use _cxa_atexit() (-fno - use - cxa - atexit)

option.compiler.std = Language standard
option.c.compiler.std.ansi = ISO C90 (-ansi)
option.c.compiler.std.c99 = ISO C99 (-std = c99)
option.c.compiler.std.c11 = ISO C11 (-std = c11)
option.c.compiler.std.default = Toolchain default (GNU ISO C90)
option.c.compiler.std.gnu99 = GNU ISO C99 (-std = gnu99)
option.c.compiler.std.gnu11 = GNU ISO C11 (-std = gnu11)
option.cpp.compiler.std.ansi = ISO 1998 C++ incl. 2003 amendments (-ansi)
option.cpp.compiler.std.default = Toolchain default (GNU ISO 1998 C++)
option.cpp.compiler.std.cpp0x = ISO 2011 C++ (-std = c++0x)
option.cpp.compiler.std.cpp11 = ISO 2011 C++ (-std = c++11)
option.cpp.compiler.std.gnucpp0x = GNU ISO 2011 C++ (-std = gnu++0x)
option.cpp.compiler.std.gnucpp11 = GNU ISO 2011 C++ (-std = gnu++11)
option.cpp.compiler.std.cpp1y = Next ISO C++ (-std = c++1y)
option.cpp.compiler.std.gnucpp1y = Next GNU ISO C++ (-std = gnu++1y)
option.cpp.compiler.abiversion = ABI version
option.cpp.compiler.abiversion.default = Toolchain default (2)
option.cpp.compiler.abiversion.0 = 0 (most conforming)
option.cpp.compiler.abiversion.1 = 1 (from G++ 3.2)
option.cpp.compiler.abiversion.2 = 2 (from G++ 3.4)
option.cpp.compiler.abiversion.3 = 3
option.cpp.compiler.abiversion.4 = 4 (from G++ 4.5)
option.cpp.compiler.abiversion.5 = 5 (from G++ 4.6)
option.cpp.compiler.abiversion.6 = 6 (from G++ 4.7)

option.compiler.warneffc = Warn about Effective C++ violations (-Weffc++)
option.compiler.warnabi = Warn on ABI violations (-Wabi)
option.compiler.warning.ctordtorprivacy = Warn on class privacy (-Wctor - dtor - privacy)
option.compiler.warning.noexcept = Warn on no - except expressions (-Wnoexcept)
option.compiler.warning.nonvirtualdtor = Warn on virtual destructors (-Wnon - virtual - dtor)
option.compiler.warning.strictnullsentinel = Warn on uncast NULL (-Wstrict - null - sentinel)
option.compiler.warning.signpromo = Warn on sign promotion (-Wsign - promo)

option.compiler.nostdincpp = Do not search system C++ directories (-nostdinc++)
option.compiler.stackprotector = Check for stack smashing in functions (-fstack-protector)
option.compiler.stackusage = Estimate stack usage (-stack-usage)

tool.c.linker =  GNU C Linker
tool.cpp.linker =  GNU C++ Linker
optionCategory.linker.libraries = Libraries
optionCategory.linker.optimizations = Optimizations
optionCategory.linker.misc = Miscellaneous
option.linker.mapfilename = Generate map
option.linker.scriptfile = Script files (-T)
option.linker.cref = Cross reference (-Xlinker --cref)
option.linker.printmap = Print link map (-Xlinker --print - map)
option.linker.nostart = Do not use standard start files (-nostartfiles)
option.linker.nodeflibs = Do not use default libraries (-nodefaultlibs)
option.linker.nostdlibs = No startup or default libs (-nostdlib)
option.linker.gcsections = Remove unused sections (-Xlinker --gc - sections)
option.linker.printgcsections = Print removed sections (-Xlinker --print - gc - sections)
option.linker.strip = Omit all symbol information (-s)
option.linker.libs = Libraries (-l)
option.linker.paths = Library search path (-L)
option.linker.flags = Linker flags (-Xlinker [option])
option.linker.otherobjs = Other objects
option.linker.other = Other linker flags
option.linker.usenewlibnano = Use newlib - nano (--specs = nano.specs)
option.linker.useprintffloat = Use float with nano printf (-u _printf_float)
option.linker.usescanffloat = Use float with nano scanf (-u _scanf_float)
option.linker.profilearcs= Incorporates instrumentation code for program (\u2010fprofile\u2010arcs)
option.linker.generatetestcoverage=Generate test coverage (\u2010ftest\u2010coverage)

option.linker.finstrumentfunctions = Instrument Functions (-finstrument-functions)

optionCategory.linker.shared = Shared library settings
option.linker.shared = Shared (-shared)
option.linker.soname = Shared object name (-Wl, -soname = )
option.linker.implname = Import library name (-Wl, --out - implib = )
option.linker.defname = DEF file name (-Wl, --output - def = )

tool.archiver = GNU Archiver

tool.flash =  Binary Converter
option.flash.outformat = Output file format (-O)
option.flash.outformat.ihex = Intel HEX
option.flash.outformat.srec = Motorola S - record
option.flash.outformat.symbolsrec = Motorola S - record (symbols)
option.flash.outformat.binary = Raw binary
option.flash.textsections = Section: -j .text
option.flash.datasections = Section: -j .data
option.flash.othersections = Other sections (-j)
option.flash.other = Other flags

tool.listing = Listing File
option.listing.allheaders = Display all headers (--all - headers | -x)
option.listing.source = Display source (--source | -S)
option.listing.demangle = Demangle names (--demangle | -C)
option.listing.debugging = Display debugging info (--debugging | -g)
option.listing.disassemble = Disassemble (--disassemble | -d)
option.listing.fileheaders = Display file headers (--file - headers | -f)
option.listing.linenumbers = Display line numbers (--line - numbers | -l)
option.listing.reloc = Display relocation info (--reloc | -r)
option.listing.symbols = Display symbols (--syms | -t)
option.listing.wide = Wide lines (--wide | -w)
option.listing.other = Other flags

tool.size =Binary Information
option.print.sizeFormat = Size format
option.print.sizeFormat.berkeley = Berkeley
option.print.sizeFormat.sysv = SysV
option.print.hex = Hex
option.print.totals = Show totals
option.print.other = Other flags

ClangBuiltinSpecsDetector.name = CDT GCC Built - in Compiler Settings Cross ARM

tab.toolchainSettings = Toolchains

# no longer visible
optionCategory.toolchain = Toolchain Settings

option.toolchain.architecture = Architecture
option.toolchain.architecture.arm = ARM (AArch32)
option.toolchain.architecture.aarch64 = ARM64 (AArch64)

option.toolchain.prefix = Prefix
option.toolchain.suffix = Suffix
option.toolchain.path = Path

option.toolchain.useglobalpath = Use built in toolchain

option.toolchain.flash = Converter object to binary
option.toolchain.listing = Create extended listing
option.toolchain.size = Show Binary Information 
tab.deviceSettings = Device
preferences.toolsPaths = Compiler Path
preferences.globalToolsPaths = Compiler Path
properties.projectToolsPaths = Compiler Path
