package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockdevOptionsFile, data={filename=str, *pr-manager=str, *locking=OnOffAuto, *aio=BlockdevAioOptions}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=BlockdevOptionsFile, data={filename=str, *pr-manager=str, *locking=OnOffAuto, *aio=BlockdevAioOptions}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevOptionsFile extends QApiType {

	
	@JsonProperty("filename")
	@Nonnull
	public java.lang.String filename;
	
	@JsonProperty("pr-manager")
	@CheckForNull
	public java.lang.String prManager;
	
	@JsonProperty("locking")
	@CheckForNull
	public OnOffAuto locking;
	
	@JsonProperty("aio")
	@CheckForNull
	public BlockdevAioOptions aio;

	@Nonnull
	public BlockdevOptionsFile withFilename(java.lang.String value) {
		this.filename = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsFile withPrManager(java.lang.String value) {
		this.prManager = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsFile withLocking(OnOffAuto value) {
		this.locking = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsFile withAio(BlockdevAioOptions value) {
		this.aio = value;
		return this;
	}

	public BlockdevOptionsFile() {
	}

	public BlockdevOptionsFile(java.lang.String filename, java.lang.String prManager, OnOffAuto locking, BlockdevAioOptions aio) {
		this.filename = filename;
		this.prManager = prManager;
		this.locking = locking;
		this.aio = aio;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("filename");
		names.add("pr-manager");
		names.add("locking");
		names.add("aio");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("filename".equals(name))
			return filename;
		if ("pr-manager".equals(name))
			return prManager;
		if ("locking".equals(name))
			return locking;
		if ("aio".equals(name))
			return aio;
		return super.getFieldByName(name);
	}
}
