package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiUnionDescriptor{name=SocketAddress, discriminator=type, data={inet=InetSocketAddress, unix=UnixSocketAddress, vsock=VsockSocketAddress, fd=String}, innerTypes=null, fields=null, base={type=SocketAddressType}, discriminatorField=null}</pre>
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class SocketAddress extends SocketAddressBase implements QApiUnion {

	// union {
	
	@JsonProperty("inet")
	@JsonUnwrapped
	@CheckForNull
	public InetSocketAddress inet;
	
	@JsonProperty("unix")
	@JsonUnwrapped
	@CheckForNull
	public UnixSocketAddress unix;
	
	@JsonProperty("vsock")
	@JsonUnwrapped
	@CheckForNull
	public VsockSocketAddress vsock;
	
	@JsonProperty("fd")
	@JsonUnwrapped
	@CheckForNull
	public String fd;
	// }

	@Nonnull
	public static SocketAddress inet(@Nonnull InetSocketAddress inet) {
		SocketAddress self = new SocketAddress();
		self.type = SocketAddressType.inet;
		self.inet = inet;
		return self;
	}

	@Nonnull
	public static SocketAddress unix(@Nonnull UnixSocketAddress unix) {
		SocketAddress self = new SocketAddress();
		self.type = SocketAddressType.unix;
		self.unix = unix;
		return self;
	}

	@Nonnull
	public static SocketAddress vsock(@Nonnull VsockSocketAddress vsock) {
		SocketAddress self = new SocketAddress();
		self.type = SocketAddressType.vsock;
		self.vsock = vsock;
		return self;
	}

	@Nonnull
	public static SocketAddress fd(@Nonnull String fd) {
		SocketAddress self = new SocketAddress();
		self.type = SocketAddressType.fd;
		self.fd = fd;
		return self;
	}

	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("inet");
		names.add("unix");
		names.add("vsock");
		names.add("fd");
		return names;
	}

	@JsonIgnore
	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("inet".equals(name))
			return inet;
		if ("unix".equals(name))
			return unix;
		if ("vsock".equals(name))
			return vsock;
		if ("fd".equals(name))
			return fd;
		return super.getFieldByName(name);
	}

	@JsonIgnore
	public boolean isValidUnion() {
		int count = 0;
		if (inet != null)
			count++;
		if (unix != null)
			count++;
		if (vsock != null)
			count++;
		if (fd != null)
			count++;
		return (count == 1);
	}
}
