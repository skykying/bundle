package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=InputMoveEvent, data={axis=InputAxis, value=int}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=InputMoveEvent, data={axis=InputAxis, value=int}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class InputMoveEvent extends QApiType {

	
	@JsonProperty("axis")
	@Nonnull
	public InputAxis axis;
	
	@JsonProperty("value")
	@Nonnull
	public long value;

	@Nonnull
	public InputMoveEvent withAxis(InputAxis value) {
		this.axis = value;
		return this;
	}

	@Nonnull
	public InputMoveEvent withValue(long value) {
		this.value = value;
		return this;
	}

	public InputMoveEvent() {
	}

	public InputMoveEvent(InputAxis axis, long value) {
		this.axis = axis;
		this.value = value;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("axis");
		names.add("value");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("axis".equals(name))
			return axis;
		if ("value".equals(name))
			return value;
		return super.getFieldByName(name);
	}
}
