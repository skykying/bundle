package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=ImageInfoSpecificQCow2EncryptionBase, data={format=BlockdevQcow2EncryptionFormat}, innerTypes=[], fields=[Field{typeName=BlockdevQcow2EncryptionFormat, name=format}], base=null}</pre>
 */
// QApiStructDescriptor{name=ImageInfoSpecificQCow2EncryptionBase, data={format=BlockdevQcow2EncryptionFormat}, innerTypes=[], fields=[Field{typeName=BlockdevQcow2EncryptionFormat, name=format}], base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class ImageInfoSpecificQCow2EncryptionBase extends QApiType {

	
	@JsonProperty("format")
	@Nonnull
	public BlockdevQcow2EncryptionFormat format;

	@Nonnull
	public ImageInfoSpecificQCow2EncryptionBase withFormat(BlockdevQcow2EncryptionFormat value) {
		this.format = value;
		return this;
	}

	public ImageInfoSpecificQCow2EncryptionBase() {
	}

	public ImageInfoSpecificQCow2EncryptionBase(BlockdevQcow2EncryptionFormat format) {
		this.format = format;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("format");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("format".equals(name))
			return format;
		return super.getFieldByName(name);
	}
}
