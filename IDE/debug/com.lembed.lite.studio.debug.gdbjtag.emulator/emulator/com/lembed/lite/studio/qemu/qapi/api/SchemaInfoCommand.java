package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=SchemaInfoCommand, data={arg-type=str, ret-type=str, allow-oob=bool}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=SchemaInfoCommand, data={arg-type=str, ret-type=str, allow-oob=bool}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class SchemaInfoCommand extends QApiType {

	
	@JsonProperty("arg-type")
	@Nonnull
	public java.lang.String argType;
	
	@JsonProperty("ret-type")
	@Nonnull
	public java.lang.String retType;
	
	@JsonProperty("allow-oob")
	@Nonnull
	public boolean allowOob;

	@Nonnull
	public SchemaInfoCommand withArgType(java.lang.String value) {
		this.argType = value;
		return this;
	}

	@Nonnull
	public SchemaInfoCommand withRetType(java.lang.String value) {
		this.retType = value;
		return this;
	}

	@Nonnull
	public SchemaInfoCommand withAllowOob(boolean value) {
		this.allowOob = value;
		return this;
	}

	public SchemaInfoCommand() {
	}

	public SchemaInfoCommand(java.lang.String argType, java.lang.String retType, boolean allowOob) {
		this.argType = argType;
		this.retType = retType;
		this.allowOob = allowOob;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("arg-type");
		names.add("ret-type");
		names.add("allow-oob");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("arg-type".equals(name))
			return argType;
		if ("ret-type".equals(name))
			return retType;
		if ("allow-oob".equals(name))
			return allowOob;
		return super.getFieldByName(name);
	}
}
