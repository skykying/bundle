package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiUnionDescriptor{name=GuestPanicInformation, discriminator=type, data={hyper-v=GuestPanicInformationHyperV, s390=GuestPanicInformationS390}, innerTypes=null, fields=null, base={type=GuestPanicInformationType}, discriminatorField=null}</pre>
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class GuestPanicInformation extends GuestPanicInformationBase implements QApiUnion {

	// union {
	
	@JsonProperty("hyper-v")
	@JsonUnwrapped
	@CheckForNull
	public GuestPanicInformationHyperV hyperV;
	
	@JsonProperty("s390")
	@JsonUnwrapped
	@CheckForNull
	public GuestPanicInformationS390 s390;
	// }

	@Nonnull
	public static GuestPanicInformation hyperV(@Nonnull GuestPanicInformationHyperV hyperV) {
		GuestPanicInformation self = new GuestPanicInformation();
		self.type = GuestPanicInformationType.hyper_v;
		self.hyperV = hyperV;
		return self;
	}

	@Nonnull
	public static GuestPanicInformation s390(@Nonnull GuestPanicInformationS390 s390) {
		GuestPanicInformation self = new GuestPanicInformation();
		self.type = GuestPanicInformationType.s390;
		self.s390 = s390;
		return self;
	}

	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("hyper-v");
		names.add("s390");
		return names;
	}

	@JsonIgnore
	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("hyper-v".equals(name))
			return hyperV;
		if ("s390".equals(name))
			return s390;
		return super.getFieldByName(name);
	}

	@JsonIgnore
	public boolean isValidUnion() {
		int count = 0;
		if (hyperV != null)
			count++;
		if (s390 != null)
			count++;
		return (count == 1);
	}
}
