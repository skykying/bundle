package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiCommandDescriptor{name=query-rx-filter, returns=[RxFilterInfo], data={*name=str}}</pre>
 */
// QApiCommandDescriptor{name=query-rx-filter, returns=[RxFilterInfo], data={*name=str}}
public class QueryRxFilterCommand extends QApiCommand<QueryRxFilterCommand.Arguments, QueryRxFilterCommand.Response> {
	/** Compound arguments to a QueryRxFilterCommand. */
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public static class Arguments {

		
		@JsonProperty("name")
		@CheckForNull
		public java.lang.String name;

		public Arguments() {
		}

		public Arguments(java.lang.String name) {
			this.name = name;
		}
	}

	/** Response to a QueryRxFilterCommand. */
	public static class Response extends QApiResponse<java.util.List<RxFilterInfo>> {
	}

	/** Constructs a new QueryRxFilterCommand. */
	public QueryRxFilterCommand(@Nonnull QueryRxFilterCommand.Arguments argument) {
		super("query-rx-filter", Response.class, argument);
	}

	/** Constructs a new QueryRxFilterCommand. */
	public QueryRxFilterCommand(java.lang.String name) {
		this(new Arguments(name));
	}
}
