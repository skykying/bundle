package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockdevSnapshotSync, data={*device=str, *node-name=str, snapshot-file=str, *snapshot-node-name=str, *format=str, *mode=NewImageMode}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=BlockdevSnapshotSync, data={*device=str, *node-name=str, snapshot-file=str, *snapshot-node-name=str, *format=str, *mode=NewImageMode}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevSnapshotSync extends QApiType {

	
	@JsonProperty("device")
	@CheckForNull
	public java.lang.String device;
	
	@JsonProperty("node-name")
	@CheckForNull
	public java.lang.String nodeName;
	
	@JsonProperty("snapshot-file")
	@Nonnull
	public java.lang.String snapshotFile;
	
	@JsonProperty("snapshot-node-name")
	@CheckForNull
	public java.lang.String snapshotNodeName;
	
	@JsonProperty("format")
	@CheckForNull
	public java.lang.String format;
	
	@JsonProperty("mode")
	@CheckForNull
	public NewImageMode mode;

	@Nonnull
	public BlockdevSnapshotSync withDevice(java.lang.String value) {
		this.device = value;
		return this;
	}

	@Nonnull
	public BlockdevSnapshotSync withNodeName(java.lang.String value) {
		this.nodeName = value;
		return this;
	}

	@Nonnull
	public BlockdevSnapshotSync withSnapshotFile(java.lang.String value) {
		this.snapshotFile = value;
		return this;
	}

	@Nonnull
	public BlockdevSnapshotSync withSnapshotNodeName(java.lang.String value) {
		this.snapshotNodeName = value;
		return this;
	}

	@Nonnull
	public BlockdevSnapshotSync withFormat(java.lang.String value) {
		this.format = value;
		return this;
	}

	@Nonnull
	public BlockdevSnapshotSync withMode(NewImageMode value) {
		this.mode = value;
		return this;
	}

	public BlockdevSnapshotSync() {
	}

	public BlockdevSnapshotSync(java.lang.String device, java.lang.String nodeName, java.lang.String snapshotFile, java.lang.String snapshotNodeName, java.lang.String format, NewImageMode mode) {
		this.device = device;
		this.nodeName = nodeName;
		this.snapshotFile = snapshotFile;
		this.snapshotNodeName = snapshotNodeName;
		this.format = format;
		this.mode = mode;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("device");
		names.add("node-name");
		names.add("snapshot-file");
		names.add("snapshot-node-name");
		names.add("format");
		names.add("mode");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("device".equals(name))
			return device;
		if ("node-name".equals(name))
			return nodeName;
		if ("snapshot-file".equals(name))
			return snapshotFile;
		if ("snapshot-node-name".equals(name))
			return snapshotNodeName;
		if ("format".equals(name))
			return format;
		if ("mode".equals(name))
			return mode;
		return super.getFieldByName(name);
	}
}
