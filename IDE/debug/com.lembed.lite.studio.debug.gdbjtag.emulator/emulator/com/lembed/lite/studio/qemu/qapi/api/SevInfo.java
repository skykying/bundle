package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=SevInfo, data={enabled=bool, api-major=uint8, api-minor=uint8, build-id=uint8, policy=uint32, state=SevState, handle=uint32}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=SevInfo, data={enabled=bool, api-major=uint8, api-minor=uint8, build-id=uint8, policy=uint32, state=SevState, handle=uint32}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class SevInfo extends QApiType {

	
	@JsonProperty("enabled")
	@Nonnull
	public boolean enabled;
	
	@JsonProperty("api-major")
	@Nonnull
	public char apiMajor;
	
	@JsonProperty("api-minor")
	@Nonnull
	public char apiMinor;
	
	@JsonProperty("build-id")
	@Nonnull
	public char buildId;
	
	@JsonProperty("policy")
	@Nonnull
	public long policy;
	
	@JsonProperty("state")
	@Nonnull
	public SevState state;
	
	@JsonProperty("handle")
	@Nonnull
	public long handle;

	@Nonnull
	public SevInfo withEnabled(boolean value) {
		this.enabled = value;
		return this;
	}

	@Nonnull
	public SevInfo withApiMajor(char value) {
		this.apiMajor = value;
		return this;
	}

	@Nonnull
	public SevInfo withApiMinor(char value) {
		this.apiMinor = value;
		return this;
	}

	@Nonnull
	public SevInfo withBuildId(char value) {
		this.buildId = value;
		return this;
	}

	@Nonnull
	public SevInfo withPolicy(long value) {
		this.policy = value;
		return this;
	}

	@Nonnull
	public SevInfo withState(SevState value) {
		this.state = value;
		return this;
	}

	@Nonnull
	public SevInfo withHandle(long value) {
		this.handle = value;
		return this;
	}

	public SevInfo() {
	}

	public SevInfo(boolean enabled, char apiMajor, char apiMinor, char buildId, long policy, SevState state, long handle) {
		this.enabled = enabled;
		this.apiMajor = apiMajor;
		this.apiMinor = apiMinor;
		this.buildId = buildId;
		this.policy = policy;
		this.state = state;
		this.handle = handle;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("enabled");
		names.add("api-major");
		names.add("api-minor");
		names.add("build-id");
		names.add("policy");
		names.add("state");
		names.add("handle");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("enabled".equals(name))
			return enabled;
		if ("api-major".equals(name))
			return apiMajor;
		if ("api-minor".equals(name))
			return apiMinor;
		if ("build-id".equals(name))
			return buildId;
		if ("policy".equals(name))
			return policy;
		if ("state".equals(name))
			return state;
		if ("handle".equals(name))
			return handle;
		return super.getFieldByName(name);
	}
}
