package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockdevOptionsCurlBase, data={url=str, *readahead=int, *timeout=int, *username=str, *password-secret=str, *proxy-username=str, *proxy-password-secret=str}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=BlockdevOptionsCurlBase, data={url=str, *readahead=int, *timeout=int, *username=str, *password-secret=str, *proxy-username=str, *proxy-password-secret=str}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevOptionsCurlBase extends QApiType {

	
	@JsonProperty("url")
	@Nonnull
	public java.lang.String url;
	
	@JsonProperty("readahead")
	@CheckForNull
	public java.lang.Long readahead;
	
	@JsonProperty("timeout")
	@CheckForNull
	public java.lang.Long timeout;
	
	@JsonProperty("username")
	@CheckForNull
	public java.lang.String username;
	
	@JsonProperty("password-secret")
	@CheckForNull
	public java.lang.String passwordSecret;
	
	@JsonProperty("proxy-username")
	@CheckForNull
	public java.lang.String proxyUsername;
	
	@JsonProperty("proxy-password-secret")
	@CheckForNull
	public java.lang.String proxyPasswordSecret;

	@Nonnull
	public BlockdevOptionsCurlBase withUrl(java.lang.String value) {
		this.url = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsCurlBase withReadahead(java.lang.Long value) {
		this.readahead = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsCurlBase withTimeout(java.lang.Long value) {
		this.timeout = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsCurlBase withUsername(java.lang.String value) {
		this.username = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsCurlBase withPasswordSecret(java.lang.String value) {
		this.passwordSecret = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsCurlBase withProxyUsername(java.lang.String value) {
		this.proxyUsername = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsCurlBase withProxyPasswordSecret(java.lang.String value) {
		this.proxyPasswordSecret = value;
		return this;
	}

	public BlockdevOptionsCurlBase() {
	}

	public BlockdevOptionsCurlBase(java.lang.String url, java.lang.Long readahead, java.lang.Long timeout, java.lang.String username, java.lang.String passwordSecret, java.lang.String proxyUsername, java.lang.String proxyPasswordSecret) {
		this.url = url;
		this.readahead = readahead;
		this.timeout = timeout;
		this.username = username;
		this.passwordSecret = passwordSecret;
		this.proxyUsername = proxyUsername;
		this.proxyPasswordSecret = proxyPasswordSecret;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("url");
		names.add("readahead");
		names.add("timeout");
		names.add("username");
		names.add("password-secret");
		names.add("proxy-username");
		names.add("proxy-password-secret");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("url".equals(name))
			return url;
		if ("readahead".equals(name))
			return readahead;
		if ("timeout".equals(name))
			return timeout;
		if ("username".equals(name))
			return username;
		if ("password-secret".equals(name))
			return passwordSecret;
		if ("proxy-username".equals(name))
			return proxyUsername;
		if ("proxy-password-secret".equals(name))
			return proxyPasswordSecret;
		return super.getFieldByName(name);
	}
}
