package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=MigrateSetParameters, data={*compress-level=int, *compress-threads=int, *decompress-threads=int, *cpu-throttle-initial=int, *cpu-throttle-increment=int, *tls-creds=StrOrNull, *tls-hostname=StrOrNull, *max-bandwidth=int, *downtime-limit=int, *x-checkpoint-delay=int, *block-incremental=bool, *x-multifd-channels=int, *x-multifd-page-count=int, *xbzrle-cache-size=size}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=MigrateSetParameters, data={*compress-level=int, *compress-threads=int, *decompress-threads=int, *cpu-throttle-initial=int, *cpu-throttle-increment=int, *tls-creds=StrOrNull, *tls-hostname=StrOrNull, *max-bandwidth=int, *downtime-limit=int, *x-checkpoint-delay=int, *block-incremental=bool, *x-multifd-channels=int, *x-multifd-page-count=int, *xbzrle-cache-size=size}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class MigrateSetParameters extends QApiType {

	
	@JsonProperty("compress-level")
	@CheckForNull
	public java.lang.Long compressLevel;
	
	@JsonProperty("compress-threads")
	@CheckForNull
	public java.lang.Long compressThreads;
	
	@JsonProperty("decompress-threads")
	@CheckForNull
	public java.lang.Long decompressThreads;
	
	@JsonProperty("cpu-throttle-initial")
	@CheckForNull
	public java.lang.Long cpuThrottleInitial;
	
	@JsonProperty("cpu-throttle-increment")
	@CheckForNull
	public java.lang.Long cpuThrottleIncrement;
	
	@JsonProperty("tls-creds")
	@CheckForNull
	public StrOrNull tlsCreds;
	
	@JsonProperty("tls-hostname")
	@CheckForNull
	public StrOrNull tlsHostname;
	
	@JsonProperty("max-bandwidth")
	@CheckForNull
	public java.lang.Long maxBandwidth;
	
	@JsonProperty("downtime-limit")
	@CheckForNull
	public java.lang.Long downtimeLimit;
	
	@JsonProperty("x-checkpoint-delay")
	@CheckForNull
	public java.lang.Long xCheckpointDelay;
	
	@JsonProperty("block-incremental")
	@CheckForNull
	public java.lang.Boolean blockIncremental;
	
	@JsonProperty("x-multifd-channels")
	@CheckForNull
	public java.lang.Long xMultifdChannels;
	
	@JsonProperty("x-multifd-page-count")
	@CheckForNull
	public java.lang.Long xMultifdPageCount;
	
	@JsonProperty("xbzrle-cache-size")
	@CheckForNull
	public java.lang.Long xbzrleCacheSize;

	@Nonnull
	public MigrateSetParameters withCompressLevel(java.lang.Long value) {
		this.compressLevel = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withCompressThreads(java.lang.Long value) {
		this.compressThreads = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withDecompressThreads(java.lang.Long value) {
		this.decompressThreads = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withCpuThrottleInitial(java.lang.Long value) {
		this.cpuThrottleInitial = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withCpuThrottleIncrement(java.lang.Long value) {
		this.cpuThrottleIncrement = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withTlsCreds(StrOrNull value) {
		this.tlsCreds = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withTlsHostname(StrOrNull value) {
		this.tlsHostname = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withMaxBandwidth(java.lang.Long value) {
		this.maxBandwidth = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withDowntimeLimit(java.lang.Long value) {
		this.downtimeLimit = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withXCheckpointDelay(java.lang.Long value) {
		this.xCheckpointDelay = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withBlockIncremental(java.lang.Boolean value) {
		this.blockIncremental = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withXMultifdChannels(java.lang.Long value) {
		this.xMultifdChannels = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withXMultifdPageCount(java.lang.Long value) {
		this.xMultifdPageCount = value;
		return this;
	}

	@Nonnull
	public MigrateSetParameters withXbzrleCacheSize(java.lang.Long value) {
		this.xbzrleCacheSize = value;
		return this;
	}

	public MigrateSetParameters() {
	}

	public MigrateSetParameters(java.lang.Long compressLevel, java.lang.Long compressThreads, java.lang.Long decompressThreads, java.lang.Long cpuThrottleInitial, java.lang.Long cpuThrottleIncrement, StrOrNull tlsCreds, StrOrNull tlsHostname, java.lang.Long maxBandwidth, java.lang.Long downtimeLimit, java.lang.Long xCheckpointDelay, java.lang.Boolean blockIncremental, java.lang.Long xMultifdChannels, java.lang.Long xMultifdPageCount, java.lang.Long xbzrleCacheSize) {
		this.compressLevel = compressLevel;
		this.compressThreads = compressThreads;
		this.decompressThreads = decompressThreads;
		this.cpuThrottleInitial = cpuThrottleInitial;
		this.cpuThrottleIncrement = cpuThrottleIncrement;
		this.tlsCreds = tlsCreds;
		this.tlsHostname = tlsHostname;
		this.maxBandwidth = maxBandwidth;
		this.downtimeLimit = downtimeLimit;
		this.xCheckpointDelay = xCheckpointDelay;
		this.blockIncremental = blockIncremental;
		this.xMultifdChannels = xMultifdChannels;
		this.xMultifdPageCount = xMultifdPageCount;
		this.xbzrleCacheSize = xbzrleCacheSize;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("compress-level");
		names.add("compress-threads");
		names.add("decompress-threads");
		names.add("cpu-throttle-initial");
		names.add("cpu-throttle-increment");
		names.add("tls-creds");
		names.add("tls-hostname");
		names.add("max-bandwidth");
		names.add("downtime-limit");
		names.add("x-checkpoint-delay");
		names.add("block-incremental");
		names.add("x-multifd-channels");
		names.add("x-multifd-page-count");
		names.add("xbzrle-cache-size");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("compress-level".equals(name))
			return compressLevel;
		if ("compress-threads".equals(name))
			return compressThreads;
		if ("decompress-threads".equals(name))
			return decompressThreads;
		if ("cpu-throttle-initial".equals(name))
			return cpuThrottleInitial;
		if ("cpu-throttle-increment".equals(name))
			return cpuThrottleIncrement;
		if ("tls-creds".equals(name))
			return tlsCreds;
		if ("tls-hostname".equals(name))
			return tlsHostname;
		if ("max-bandwidth".equals(name))
			return maxBandwidth;
		if ("downtime-limit".equals(name))
			return downtimeLimit;
		if ("x-checkpoint-delay".equals(name))
			return xCheckpointDelay;
		if ("block-incremental".equals(name))
			return blockIncremental;
		if ("x-multifd-channels".equals(name))
			return xMultifdChannels;
		if ("x-multifd-page-count".equals(name))
			return xMultifdPageCount;
		if ("xbzrle-cache-size".equals(name))
			return xbzrleCacheSize;
		return super.getFieldByName(name);
	}
}
