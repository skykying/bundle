package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=ChardevInfo, data={label=str, filename=str, frontend-open=bool}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=ChardevInfo, data={label=str, filename=str, frontend-open=bool}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class ChardevInfo extends QApiType {

	
	@JsonProperty("label")
	@Nonnull
	public java.lang.String label;
	
	@JsonProperty("filename")
	@Nonnull
	public java.lang.String filename;
	
	@JsonProperty("frontend-open")
	@Nonnull
	public boolean frontendOpen;

	@Nonnull
	public ChardevInfo withLabel(java.lang.String value) {
		this.label = value;
		return this;
	}

	@Nonnull
	public ChardevInfo withFilename(java.lang.String value) {
		this.filename = value;
		return this;
	}

	@Nonnull
	public ChardevInfo withFrontendOpen(boolean value) {
		this.frontendOpen = value;
		return this;
	}

	public ChardevInfo() {
	}

	public ChardevInfo(java.lang.String label, java.lang.String filename, boolean frontendOpen) {
		this.label = label;
		this.filename = filename;
		this.frontendOpen = frontendOpen;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("label");
		names.add("filename");
		names.add("frontend-open");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("label".equals(name))
			return label;
		if ("filename".equals(name))
			return filename;
		if ("frontend-open".equals(name))
			return frontendOpen;
		return super.getFieldByName(name);
	}
}
