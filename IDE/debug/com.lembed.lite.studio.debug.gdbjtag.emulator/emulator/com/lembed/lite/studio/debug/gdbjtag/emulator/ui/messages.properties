###############################################################################
#  Copyright (c) 2008-2010 QNX Software Systems and others.
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  which accompanies this distribution, and is available at
#  http://www.eclipse.org/legal/epl-v10.html
# 
#  Contributors:
#      QNX Software Systems - initial API and implementation
#      Bruce Griffith,Sage Electronic Engineering, LLC - bug 305943
#               - API generalization to become transport-independent (e.g. to
#                 allow connections via serial ports and pipes).
###############################################################################


##### DebuggerTab #####
DebuggerTab.interfaceGroup_Text=Debug Options

DebuggerTab.gdbServerGroup_Text=Emulator Setup

DebuggerTab.doStartGdbServer_Text=Start Emulator locally
DebuggerTab.doStartGdbServer_ToolTipText=\
Automatically start/stop Emulator as a GDB\n\
server locally for each debug session.\n\
The alternate way is to start the server\n\
manually and to keep it running continuously,\n\
either locally or on a remote machine.

DebuggerTab.gdbServerExecutable_Label=Executable:
DebuggerTab.gdbServerExecutable_ToolTipText=\
The GDB server executable, usually\n\
${emulator_adapter_path}/${emulator_adapter_executable}. Be sure\n\
you define the emulator_path properly in the\n\
Run/Debug -> String Substitution settings.

DebuggerTab.gdbServerExecutableBrowse=Browse...
DebuggerTab.gdbServerExecutableBrowse_Title=Select Emulator Binary
DebuggerTab.gdbServerExecutableVariable=Variables...

DebuggerTab.gdbServerBoard_Label=Board name:
DebuggerTab.gdbServerBoard_ToolTipText=\
The CMSIS name of the board to emulate.\n\
May be empty, but in this case the\n\
device name is mandatory.\n\
To get a list of the available boards,\n\
enter '?'.

DebuggerTab.gdbServerDevice_Label=Device name:
DebuggerTab.gdbServerDevice_ToolTipText=\
The CMSIS name of the device to emulate.\n\
Defaults to the board device, if defined.\n\
To get a list of the available devices,\n\
enter '?'.

DebuggerTab.gdbServerVerbose_Label=Extra verbose
DebuggerTab.gdbServerVerbose_ToolTipText=\
Add more verbosity to the Emulator output.

DebuggerTab.gdbServerGdbPort_Label=GDB port:
DebuggerTab.gdbServerGdbPort_ToolTipText=\
The port on which the QEMU GDB Server\n\
should listen for an incoming connection\n\
from the GDB client (default 1234).

DebuggerTab.gdbServerLog_Label=Log file:
DebuggerTab.gdbServerLogBrowse_Button=Browse...
DebuggerTab.gdbServerLogBrowse_Title=Select where to store the log file

DebuggerTab.gdbServerOther_Label=More options:
DebuggerTab.gdbServerOther_ToolTipText=\
More configuration options, for example\n\
-d trace,trace_mr,unimp,guest_errors\n\
to get lots of tracing messages, or\n\
-monitor stdio\n\
to activate the monitor.

DebuggerTab.enableSemihosting_Text=Enable ARM semihosting
DebuggerTab.enableSemihosting_ToolTipText=\
Enable support for semihosting. In addition\n\
to full semihosting test applications, this\n\
is also needed to display debug trace\n\
messages in retargetted applications. The\n\
trace messages are routed to the GDB client\n\
console.

DebuggerTab.gdbSemihostingCmdline_Label=Command line:
DebuggerTab.gdbSemihostingCmdline_ToolTipText=\
The entire command line to be passed to the\n\
debugged application via the semihosting\n\
SYS_GET_CMDLINE function. Must start with\n\
the program name, which will be passed as\n\
argv[0].

DebuggerTab.disableGraphics_Text=Do not open graphic windows
DebuggerTab.disableGraphics_ToolTipText=\
Disable graphic support, do not open\n\
the window to show the board image or\n\
any graphic console.

DebuggerTab.gdbServerAllocateConsole_Label=Allocate console for Emulator
DebuggerTab.gdbServerAllocateConsole_ToolTipText=\
Allocate an Eclipse console where the output\n\
generated by Emulator will be displayed.

DebuggerTab.gdbSetupGroup_Text=GDB Client Setup

DebuggerTab.gdbCommand_Label=Executable:
DebuggerTab.gdbCommand_ToolTipText=\
The GDB client executable, for example\n\
${cross_prefix}gdb${cross_suffix}. The\n\
substitution is done using the project\n\
macros and toolchain path.

DebuggerTab.gdbCommandBrowse=Browse...
DebuggerTab.gdbCommandBrowse_Title=Select GDB Client Binary
DebuggerTab.gdbCommandVariable=Variables...

DebuggerTab.gdbOtherOptions_Label=Other options:
DebuggerTab.gdbOtherOptions_ToolTipText=\
Additional command line options to be passed\n\
to the GDB client. They are added to the\n\
mandatory '--interpreter=mi2 --nx' passed first. 

DebuggerTab.gdbOtherCommands_Label=Commands:
DebuggerTab.gdbOtherCommands_ToolTipText=\
Additional commands that can be passed to the\n\
GDB client. They are executed just before\n\
the eventual .gdbinit. Other useful commands\n\
are: 'set debug remote 1', 'set\n\
remotetimeout 20'.

DebuggerTab.remoteGroup_Text=Remote Target
DebuggerTab.ipAddressLabel=Host name or IP address:
DebuggerTab.portNumberLabel=Port number:


DebuggerTab.update_thread_list_on_suspend_Text=Force thread list update on suspend
DebuggerTab.update_thread_list_on_suspend_ToolTipText=\
This checkbox controls whether the CDT\n\
debugger will ask gdb for the target\n\
program's thread list on each suspend\n\
event (breakpoint-hit, step, etc). Normally,\n\
this isn't necessary, as GDB sends\n\
notifications in realtime when a thread is\n\
created or destroyed. However, some\n\
lightweight GDB remote stubs won't\n\
send these notifications. As such, the\n\
CDT debugger doesn't find out about\n\
new or destroyed threads unless it polls\n\
gdb. Turn on this option if you are\n\
debugging such a target (typically an\n\
embedded one).

# Also used by StartupTab.
DebuggerTab.restoreDefaults_Link=<a>Restore defaults</a>
DebuggerTab.restoreDefaults_ToolTipText=\
Restore all fields to their default values.\n\
Current values will be lost.

##### StartupTab #####
StartupTab.initGroup_Text=Initialization Commands

StartupTab.doFirstReset_Text=Initial Reset.
StartupTab.doFirstReset_ToolTipText=\
Perform an initial reset and halt; this will\n\
take the processor out of whatever state it\n\
was and prepare it for programming the flash.\n\
Normally the GDB server performs a reset\n\
when starting, so this is especially useful\n\
when a specific reset type is required.\n\
The generated command is 'monitor system_reset'.

StartupTab.initCommands_ToolTipText=\
Additional or alternate initialisation\n\
commands. To reach the GDB server, the\n\
commands should be prefixed with 'monitor'.

StartupTab.loadGroup_Text=Load Symbols and Executable
StartupTab.loadImage_Text=Load executable

StartupTab.useProjectBinary_Label=Use project binary:
StartupTab.useProjectBinary_ToolTipText=Use C/C++ application specified in the Main tab.

StartupTab.useFile_Label=Use file:
StartupTab.FileBrowseWs_Label=Workspace...
StartupTab.FileBrowse_Label=File System...
StartupTab.imageOffsetLabel_Text=Executable offset (hex):
StartupTab.symbolsOffsetLabel_Text=Symbols offset (hex):

StartupTab.loadSymbols_Text=Load symbols

StartupTab.imageFileBrowseWs_Title=Select executable file
StartupTab.imageFileBrowse_Title=Select executable file

StartupTab.symbolsFileBrowseWs_Title=Select symbols file
StartupTab.symbolsFileBrowse_Title=Select symbols file

StartupTab.runOptionGroup_Text=Runtime Options
StartupTab.setPcRegister_Text=Set program counter at (hex):
StartupTab.setStopAt_Text=Set breakpoint at:
StartupTab.setResume_Text=Resume

StartupTab.doDebugInRam_Text=Debug in RAM
StartupTab.doDebugInRam_ToolTipText=\
Load the executable and run the entire\n\
debug session in RAM. The main effect\n\
is that the executable will be loaded\n\
after each reset/restart, not only\n\
once after the initial reset.

StartupTab.runGroup_Text=Run/Restart Commands

StartupTab.doSecondReset_Text=Pre-run/Restart reset.
StartupTab.doSecondReset_ToolTipText=\
Perform a second reset; this will\n\
prepare the processor to start execution\n\
from a known state. It is always performed\n\
at Restart. The generated command is\n\
'monitor system_reset'.

StartupTab.secondResetWarning_Text=(always executed at Restart)

StartupTab.setPcRegister_ToolTipText=\
Set the PC to a different address than\n\
the Reset address. The generated command\n\
is 'set $pc=0x<value>'.

StartupTab.pcRegister_ToolTipText=\
A hex address (no 0x prefix required).

StartupTab.setStopAt_ToolTipText=\
Set a temporary breakpoint at the given\n\
symbol. The generated command is\n\
'tbreak <symbol>'.

#StartupTab.reload_Text=(Load/reload executable when debugging in RAM)

StartupTab.runCommands_ToolTipText=\
Additional or alternate commands to be\n\
send before starting execution.\n\
Example: set $sp=0xNNN.\n\
To reach the GDB server, commands\n\
should be prefixed with 'monitor'.

StartupTab.doContinue_Text=Continue
StartupTab.doContinue_ToolTipText=\
Continue execution from the point where it\n\
was halted after reset.

StartupTab.imageFileName_not_specified=Image file name not specified
StartupTab.imageFileName_does_not_exist=Image file does not exist
StartupTab.imageOffset_not_specified=Image offset not specified
StartupTab.symbolsFileName_not_specified=Symbols file name not specified
StartupTab.symbolsFileName_does_not_exist=Symbols file does not exist
StartupTab.symbolsOffset_not_specified=Symbols offset not specified
StartupTab.pcRegister_not_specified=Program counter not specified
StartupTab.stopAt_not_specified=Breakpoint location not specified

StartupTab.FileBrowseWs_Message=Select a workspace resource

### legacy ###
GDBJtagStartupTab.initGroup_Text=Initialization Commands
GDBJtagStartupTab.doReset_Text=Reset and Delay (seconds):
GDBJtagStartupTab.doHalt_Text=Halt

GDBJtagStartupTab.loadGroup_Text=Load Image and Symbols
GDBJtagStartupTab.loadImage_Text=Load image
GDBJtagStartupTab.imageLabel_Text=Image file name:
GDBJtagStartupTab.imageFileBrowseWs_Title=Select image file
GDBJtagStartupTab.imageFileBrowse_Title=Select image file
GDBJtagStartupTab.imageOffsetLabel_Text=Image offset (hex):
GDBJtagStartupTab.FileBrowseWs_Label=Workspace...
GDBJtagStartupTab.FileBrowseWs_Message=Select a workspace resource
GDBJtagStartupTab.FileBrowse_Label=File System...
GDBJtagStartupTab.FileBrowse_Message=Select a file from file system
GDBJtagStartupTab.loadSymbols_Text=Load symbols
GDBJtagStartupTab.symbolsLabel_Text=Symbols file name:
GDBJtagStartupTab.symbolsFileBrowseWs_Title=Select symbols file
GDBJtagStartupTab.symbolsFileBrowse_Title=Select symbols file
GDBJtagStartupTab.symbolsOffsetLabel_Text=Symbols offset (hex):
GDBJtagStartupTab.useProjectBinary_Label=Use project binary:
GDBJtagStartupTab.useFile_Label=Use file:
GDBJtagStartupTab.useProjectBinary_ToolTip=Use C/C++ application specified in the Main tab.

GDBJtagStartupTab.runOptionGroup_Text=Runtime Options
GDBJtagStartupTab.setPcRegister_Text=Set program counter at (hex):
GDBJtagStartupTab.setStopAt_Text=Set breakpoint at:
GDBJtagStartupTab.setResume_Text=Resume

GDBJtagStartupTab.runGroup_Text=Run Commands

GDBJtagStartupTab.imageFileName_not_specified=Image file name not specified
GDBJtagStartupTab.imageFileName_does_not_exist=Image file does not exist
GDBJtagStartupTab.imageOffset_not_specified=Image offset not specified
GDBJtagStartupTab.symbolsFileName_not_specified=Symbols file name not specified
GDBJtagStartupTab.symbolsFileName_does_not_exist=Symbols file does not exist
GDBJtagStartupTab.symbolsOffset_not_specified=Symbols offset not specified
GDBJtagStartupTab.pcRegister_not_specified=Program counter not specified
GDBJtagStartupTab.stopAt_not_specified=Breakpoint location not specified

GDBJtagDebuggerTab.gdbSetupGroup_Text=GDB Client Setup
GDBJtagDebuggerTab.gdbCommandLabel=GDB Client Command:
GDBJtagDebuggerTab.gdbCommandBrowse=Browse...
GDBJtagDebuggerTab.gdbCommandBrowse_Title=Select GDB Client Binary
GDBJtagDebuggerTab.gdbCommandVariable=Variables...
GDBJtagDebuggerTab.commandFactoryLabel=Command Set:
GDBJtagDebuggerTab.miProtocolLabel=Protocol Version:
GDBJtagDebuggerTab.verboseModeLabel=Verbose console mode
GDBJtagDebuggerTab.remoteGroup_Text=Remote Target
GDBJtagDebuggerTab.useRemote_Text=Use remote target
GDBJtagDebuggerTab.jtagDeviceLabel=JTAG Device:
GDBJtagDebuggerTab.ipAddressLabel=Host name or IP address:
GDBJtagDebuggerTab.portNumberLabel=Port number:
GDBJtagDebuggerTab.connectionLabel=GDB Connection String:
GDBJtagDebuggerTab.update_thread_list_on_suspend=Force thread list update on suspend

# ---

QemuPagePropertyPage_description=\
Configure the location where Emulator is installed. \
The values are not stored as regular preferences, but as \
variables (see String Substitution).\
\n\n\
After installing Emulator updates, restart Eclipse for the \
defaults to be re-evaluated and use the Restore Defaults \
button to configure the new location.\
\n

QemuPagePropertyPage_executable_label=Executable:
QemuPagePropertyPage_executable_folder=Folder:

Variable_executable_description=Name of the Emulator executable
Variable_path_description=Path to the Emulator installation folder
