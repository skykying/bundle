package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockDirtyBitmapAdd, data={node=str, name=str, *granularity=uint32, *persistent=bool, *autoload=bool}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=BlockDirtyBitmapAdd, data={node=str, name=str, *granularity=uint32, *persistent=bool, *autoload=bool}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockDirtyBitmapAdd extends QApiType {

	
	@JsonProperty("node")
	@Nonnull
	public java.lang.String node;
	
	@JsonProperty("name")
	@Nonnull
	public java.lang.String name;
	
	@JsonProperty("granularity")
	@CheckForNull
	public java.lang.Long granularity;
	
	@JsonProperty("persistent")
	@CheckForNull
	public java.lang.Boolean persistent;
	
	@JsonProperty("autoload")
	@CheckForNull
	public java.lang.Boolean autoload;

	@Nonnull
	public BlockDirtyBitmapAdd withNode(java.lang.String value) {
		this.node = value;
		return this;
	}

	@Nonnull
	public BlockDirtyBitmapAdd withName(java.lang.String value) {
		this.name = value;
		return this;
	}

	@Nonnull
	public BlockDirtyBitmapAdd withGranularity(java.lang.Long value) {
		this.granularity = value;
		return this;
	}

	@Nonnull
	public BlockDirtyBitmapAdd withPersistent(java.lang.Boolean value) {
		this.persistent = value;
		return this;
	}

	@Nonnull
	public BlockDirtyBitmapAdd withAutoload(java.lang.Boolean value) {
		this.autoload = value;
		return this;
	}

	public BlockDirtyBitmapAdd() {
	}

	public BlockDirtyBitmapAdd(java.lang.String node, java.lang.String name, java.lang.Long granularity, java.lang.Boolean persistent, java.lang.Boolean autoload) {
		this.node = node;
		this.name = name;
		this.granularity = granularity;
		this.persistent = persistent;
		this.autoload = autoload;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("node");
		names.add("name");
		names.add("granularity");
		names.add("persistent");
		names.add("autoload");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("node".equals(name))
			return node;
		if ("name".equals(name))
			return name;
		if ("granularity".equals(name))
			return granularity;
		if ("persistent".equals(name))
			return persistent;
		if ("autoload".equals(name))
			return autoload;
		return super.getFieldByName(name);
	}
}
