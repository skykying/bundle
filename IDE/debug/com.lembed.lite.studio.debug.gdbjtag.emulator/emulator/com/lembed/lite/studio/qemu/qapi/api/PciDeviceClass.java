package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=PciDeviceClass, data={*desc=str, class=int}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=PciDeviceClass, data={*desc=str, class=int}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class PciDeviceClass extends QApiType {

	
	@JsonProperty("desc")
	@CheckForNull
	public java.lang.String desc;
	
	@JsonProperty("class")
	@Nonnull
	public long _class;

	@Nonnull
	public PciDeviceClass withDesc(java.lang.String value) {
		this.desc = value;
		return this;
	}

	@Nonnull
	public PciDeviceClass with_class(long value) {
		this._class = value;
		return this;
	}

	public PciDeviceClass() {
	}

	public PciDeviceClass(java.lang.String desc, long _class) {
		this.desc = desc;
		this._class = _class;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("desc");
		names.add("class");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("desc".equals(name))
			return desc;
		if ("class".equals(name))
			return _class;
		return super.getFieldByName(name);
	}
}
