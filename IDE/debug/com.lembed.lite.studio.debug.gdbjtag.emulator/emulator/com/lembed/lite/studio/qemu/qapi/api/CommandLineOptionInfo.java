package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=CommandLineOptionInfo, data={option=str, parameters=[CommandLineParameterInfo]}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=CommandLineOptionInfo, data={option=str, parameters=[CommandLineParameterInfo]}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class CommandLineOptionInfo extends QApiType {

	
	@JsonProperty("option")
	@Nonnull
	public java.lang.String option;
	
	@JsonProperty("parameters")
	@Nonnull
	public java.util.List<CommandLineParameterInfo> parameters;

	@Nonnull
	public CommandLineOptionInfo withOption(java.lang.String value) {
		this.option = value;
		return this;
	}

	@Nonnull
	public CommandLineOptionInfo withParameters(java.util.List<CommandLineParameterInfo> value) {
		this.parameters = value;
		return this;
	}

	public CommandLineOptionInfo() {
	}

	public CommandLineOptionInfo(java.lang.String option, java.util.List<CommandLineParameterInfo> parameters) {
		this.option = option;
		this.parameters = parameters;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("option");
		names.add("parameters");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("option".equals(name))
			return option;
		if ("parameters".equals(name))
			return parameters;
		return super.getFieldByName(name);
	}
}
