package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=NetLegacy, data={*vlan=int32, *id=str, *name=str, opts=NetLegacyOptions}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=NetLegacy, data={*vlan=int32, *id=str, *name=str, opts=NetLegacyOptions}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class NetLegacy extends QApiType {

	
	@JsonProperty("vlan")
	@CheckForNull
	public java.lang.Integer vlan;
	
	@JsonProperty("id")
	@CheckForNull
	public java.lang.String id;
	
	@JsonProperty("name")
	@CheckForNull
	public java.lang.String name;
	
	@JsonProperty("opts")
	@Nonnull
	public NetLegacyOptions opts;

	@Nonnull
	public NetLegacy withVlan(java.lang.Integer value) {
		this.vlan = value;
		return this;
	}

	@Nonnull
	public NetLegacy withId(java.lang.String value) {
		this.id = value;
		return this;
	}

	@Nonnull
	public NetLegacy withName(java.lang.String value) {
		this.name = value;
		return this;
	}

	@Nonnull
	public NetLegacy withOpts(NetLegacyOptions value) {
		this.opts = value;
		return this;
	}

	public NetLegacy() {
	}

	public NetLegacy(java.lang.Integer vlan, java.lang.String id, java.lang.String name, NetLegacyOptions opts) {
		this.vlan = vlan;
		this.id = id;
		this.name = name;
		this.opts = opts;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("vlan");
		names.add("id");
		names.add("name");
		names.add("opts");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("vlan".equals(name))
			return vlan;
		if ("id".equals(name))
			return id;
		if ("name".equals(name))
			return name;
		if ("opts".equals(name))
			return opts;
		return super.getFieldByName(name);
	}
}
