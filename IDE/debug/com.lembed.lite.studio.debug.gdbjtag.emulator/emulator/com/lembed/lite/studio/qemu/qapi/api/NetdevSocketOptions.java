package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=NetdevSocketOptions, data={*fd=str, *listen=str, *connect=str, *mcast=str, *localaddr=str, *udp=str}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=NetdevSocketOptions, data={*fd=str, *listen=str, *connect=str, *mcast=str, *localaddr=str, *udp=str}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class NetdevSocketOptions extends QApiType {

	
	@JsonProperty("fd")
	@CheckForNull
	public java.lang.String fd;
	
	@JsonProperty("listen")
	@CheckForNull
	public java.lang.String listen;
	
	@JsonProperty("connect")
	@CheckForNull
	public java.lang.String connect;
	
	@JsonProperty("mcast")
	@CheckForNull
	public java.lang.String mcast;
	
	@JsonProperty("localaddr")
	@CheckForNull
	public java.lang.String localaddr;
	
	@JsonProperty("udp")
	@CheckForNull
	public java.lang.String udp;

	@Nonnull
	public NetdevSocketOptions withFd(java.lang.String value) {
		this.fd = value;
		return this;
	}

	@Nonnull
	public NetdevSocketOptions withListen(java.lang.String value) {
		this.listen = value;
		return this;
	}

	@Nonnull
	public NetdevSocketOptions withConnect(java.lang.String value) {
		this.connect = value;
		return this;
	}

	@Nonnull
	public NetdevSocketOptions withMcast(java.lang.String value) {
		this.mcast = value;
		return this;
	}

	@Nonnull
	public NetdevSocketOptions withLocaladdr(java.lang.String value) {
		this.localaddr = value;
		return this;
	}

	@Nonnull
	public NetdevSocketOptions withUdp(java.lang.String value) {
		this.udp = value;
		return this;
	}

	public NetdevSocketOptions() {
	}

	public NetdevSocketOptions(java.lang.String fd, java.lang.String listen, java.lang.String connect, java.lang.String mcast, java.lang.String localaddr, java.lang.String udp) {
		this.fd = fd;
		this.listen = listen;
		this.connect = connect;
		this.mcast = mcast;
		this.localaddr = localaddr;
		this.udp = udp;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("fd");
		names.add("listen");
		names.add("connect");
		names.add("mcast");
		names.add("localaddr");
		names.add("udp");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("fd".equals(name))
			return fd;
		if ("listen".equals(name))
			return listen;
		if ("connect".equals(name))
			return connect;
		if ("mcast".equals(name))
			return mcast;
		if ("localaddr".equals(name))
			return localaddr;
		if ("udp".equals(name))
			return udp;
		return super.getFieldByName(name);
	}
}
