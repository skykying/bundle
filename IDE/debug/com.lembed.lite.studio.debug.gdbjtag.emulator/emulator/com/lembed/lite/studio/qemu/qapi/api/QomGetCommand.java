package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiCommandDescriptor{name=qom-get, returns=any, data={path=str, property=str}}</pre>
 */
// QApiCommandDescriptor{name=qom-get, returns=any, data={path=str, property=str}}
public class QomGetCommand extends QApiCommand<QomGetCommand.Arguments, QomGetCommand.Response> {
	/** Compound arguments to a QomGetCommand. */
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public static class Arguments {

		
		@JsonProperty("path")
		@Nonnull
		public java.lang.String path;
		
		@JsonProperty("property")
		@Nonnull
		public java.lang.String property;

		public Arguments() {
		}

		public Arguments(java.lang.String path, java.lang.String property) {
			this.path = path;
			this.property = property;
		}
	}

	/** Response to a QomGetCommand. */
	public static class Response extends QApiResponse<java.lang.Object> {
	}

	/** Constructs a new QomGetCommand. */
	public QomGetCommand(@Nonnull QomGetCommand.Arguments argument) {
		super("qom-get", Response.class, argument);
	}

	/** Constructs a new QomGetCommand. */
	public QomGetCommand(java.lang.String path, java.lang.String property) {
		this(new Arguments(path, property));
	}
}
