package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=GuestPanicInformationS390, data={core=uint32, psw-mask=uint64, psw-addr=uint64, reason=S390CrashReason}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=GuestPanicInformationS390, data={core=uint32, psw-mask=uint64, psw-addr=uint64, reason=S390CrashReason}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class GuestPanicInformationS390 extends QApiType {

	
	@JsonProperty("core")
	@Nonnull
	public long core;
	
	@JsonProperty("psw-mask")
	@Nonnull
	public long pswMask;
	
	@JsonProperty("psw-addr")
	@Nonnull
	public long pswAddr;
	
	@JsonProperty("reason")
	@Nonnull
	public S390CrashReason reason;

	@Nonnull
	public GuestPanicInformationS390 withCore(long value) {
		this.core = value;
		return this;
	}

	@Nonnull
	public GuestPanicInformationS390 withPswMask(long value) {
		this.pswMask = value;
		return this;
	}

	@Nonnull
	public GuestPanicInformationS390 withPswAddr(long value) {
		this.pswAddr = value;
		return this;
	}

	@Nonnull
	public GuestPanicInformationS390 withReason(S390CrashReason value) {
		this.reason = value;
		return this;
	}

	public GuestPanicInformationS390() {
	}

	public GuestPanicInformationS390(long core, long pswMask, long pswAddr, S390CrashReason reason) {
		this.core = core;
		this.pswMask = pswMask;
		this.pswAddr = pswAddr;
		this.reason = reason;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("core");
		names.add("psw-mask");
		names.add("psw-addr");
		names.add("reason");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("core".equals(name))
			return core;
		if ("psw-mask".equals(name))
			return pswMask;
		if ("psw-addr".equals(name))
			return pswAddr;
		if ("reason".equals(name))
			return reason;
		return super.getFieldByName(name);
	}
}
