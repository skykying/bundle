package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=ImageInfoSpecificQCow2, data={compat=str, *lazy-refcounts=bool, *corrupt=bool, refcount-bits=int, *encrypt=ImageInfoSpecificQCow2Encryption}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=ImageInfoSpecificQCow2, data={compat=str, *lazy-refcounts=bool, *corrupt=bool, refcount-bits=int, *encrypt=ImageInfoSpecificQCow2Encryption}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class ImageInfoSpecificQCow2 extends QApiType {

	
	@JsonProperty("compat")
	@Nonnull
	public java.lang.String compat;
	
	@JsonProperty("lazy-refcounts")
	@CheckForNull
	public java.lang.Boolean lazyRefcounts;
	
	@JsonProperty("corrupt")
	@CheckForNull
	public java.lang.Boolean corrupt;
	
	@JsonProperty("refcount-bits")
	@Nonnull
	public long refcountBits;
	
	@JsonProperty("encrypt")
	@CheckForNull
	public ImageInfoSpecificQCow2Encryption encrypt;

	@Nonnull
	public ImageInfoSpecificQCow2 withCompat(java.lang.String value) {
		this.compat = value;
		return this;
	}

	@Nonnull
	public ImageInfoSpecificQCow2 withLazyRefcounts(java.lang.Boolean value) {
		this.lazyRefcounts = value;
		return this;
	}

	@Nonnull
	public ImageInfoSpecificQCow2 withCorrupt(java.lang.Boolean value) {
		this.corrupt = value;
		return this;
	}

	@Nonnull
	public ImageInfoSpecificQCow2 withRefcountBits(long value) {
		this.refcountBits = value;
		return this;
	}

	@Nonnull
	public ImageInfoSpecificQCow2 withEncrypt(ImageInfoSpecificQCow2Encryption value) {
		this.encrypt = value;
		return this;
	}

	public ImageInfoSpecificQCow2() {
	}

	public ImageInfoSpecificQCow2(java.lang.String compat, java.lang.Boolean lazyRefcounts, java.lang.Boolean corrupt, long refcountBits, ImageInfoSpecificQCow2Encryption encrypt) {
		this.compat = compat;
		this.lazyRefcounts = lazyRefcounts;
		this.corrupt = corrupt;
		this.refcountBits = refcountBits;
		this.encrypt = encrypt;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("compat");
		names.add("lazy-refcounts");
		names.add("corrupt");
		names.add("refcount-bits");
		names.add("encrypt");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("compat".equals(name))
			return compat;
		if ("lazy-refcounts".equals(name))
			return lazyRefcounts;
		if ("corrupt".equals(name))
			return corrupt;
		if ("refcount-bits".equals(name))
			return refcountBits;
		if ("encrypt".equals(name))
			return encrypt;
		return super.getFieldByName(name);
	}
}
