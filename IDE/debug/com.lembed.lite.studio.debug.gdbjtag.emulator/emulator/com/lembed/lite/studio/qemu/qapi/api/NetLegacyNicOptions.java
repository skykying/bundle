package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=NetLegacyNicOptions, data={*netdev=str, *macaddr=str, *model=str, *addr=str, *vectors=uint32}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=NetLegacyNicOptions, data={*netdev=str, *macaddr=str, *model=str, *addr=str, *vectors=uint32}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class NetLegacyNicOptions extends QApiType {

	
	@JsonProperty("netdev")
	@CheckForNull
	public java.lang.String netdev;
	
	@JsonProperty("macaddr")
	@CheckForNull
	public java.lang.String macaddr;
	
	@JsonProperty("model")
	@CheckForNull
	public java.lang.String model;
	
	@JsonProperty("addr")
	@CheckForNull
	public java.lang.String addr;
	
	@JsonProperty("vectors")
	@CheckForNull
	public java.lang.Long vectors;

	@Nonnull
	public NetLegacyNicOptions withNetdev(java.lang.String value) {
		this.netdev = value;
		return this;
	}

	@Nonnull
	public NetLegacyNicOptions withMacaddr(java.lang.String value) {
		this.macaddr = value;
		return this;
	}

	@Nonnull
	public NetLegacyNicOptions withModel(java.lang.String value) {
		this.model = value;
		return this;
	}

	@Nonnull
	public NetLegacyNicOptions withAddr(java.lang.String value) {
		this.addr = value;
		return this;
	}

	@Nonnull
	public NetLegacyNicOptions withVectors(java.lang.Long value) {
		this.vectors = value;
		return this;
	}

	public NetLegacyNicOptions() {
	}

	public NetLegacyNicOptions(java.lang.String netdev, java.lang.String macaddr, java.lang.String model, java.lang.String addr, java.lang.Long vectors) {
		this.netdev = netdev;
		this.macaddr = macaddr;
		this.model = model;
		this.addr = addr;
		this.vectors = vectors;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("netdev");
		names.add("macaddr");
		names.add("model");
		names.add("addr");
		names.add("vectors");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("netdev".equals(name))
			return netdev;
		if ("macaddr".equals(name))
			return macaddr;
		if ("model".equals(name))
			return model;
		if ("addr".equals(name))
			return addr;
		if ("vectors".equals(name))
			return vectors;
		return super.getFieldByName(name);
	}
}
