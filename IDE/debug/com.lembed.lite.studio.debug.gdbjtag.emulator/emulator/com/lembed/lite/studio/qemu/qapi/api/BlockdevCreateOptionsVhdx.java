package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockdevCreateOptionsVhdx, data={file=BlockdevRef, size=size, *log-size=size, *block-size=size, *subformat=BlockdevVhdxSubformat, *block-state-zero=bool}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=BlockdevCreateOptionsVhdx, data={file=BlockdevRef, size=size, *log-size=size, *block-size=size, *subformat=BlockdevVhdxSubformat, *block-state-zero=bool}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevCreateOptionsVhdx extends QApiType {

	
	@JsonProperty("file")
	@Nonnull
	public BlockdevRef file;
	
	@JsonProperty("size")
	@Nonnull
	public long size;
	
	@JsonProperty("log-size")
	@CheckForNull
	public java.lang.Long logSize;
	
	@JsonProperty("block-size")
	@CheckForNull
	public java.lang.Long blockSize;
	
	@JsonProperty("subformat")
	@CheckForNull
	public BlockdevVhdxSubformat subformat;
	
	@JsonProperty("block-state-zero")
	@CheckForNull
	public java.lang.Boolean blockStateZero;

	@Nonnull
	public BlockdevCreateOptionsVhdx withFile(BlockdevRef value) {
		this.file = value;
		return this;
	}

	@Nonnull
	public BlockdevCreateOptionsVhdx withSize(long value) {
		this.size = value;
		return this;
	}

	@Nonnull
	public BlockdevCreateOptionsVhdx withLogSize(java.lang.Long value) {
		this.logSize = value;
		return this;
	}

	@Nonnull
	public BlockdevCreateOptionsVhdx withBlockSize(java.lang.Long value) {
		this.blockSize = value;
		return this;
	}

	@Nonnull
	public BlockdevCreateOptionsVhdx withSubformat(BlockdevVhdxSubformat value) {
		this.subformat = value;
		return this;
	}

	@Nonnull
	public BlockdevCreateOptionsVhdx withBlockStateZero(java.lang.Boolean value) {
		this.blockStateZero = value;
		return this;
	}

	public BlockdevCreateOptionsVhdx() {
	}

	public BlockdevCreateOptionsVhdx(BlockdevRef file, long size, java.lang.Long logSize, java.lang.Long blockSize, BlockdevVhdxSubformat subformat, java.lang.Boolean blockStateZero) {
		this.file = file;
		this.size = size;
		this.logSize = logSize;
		this.blockSize = blockSize;
		this.subformat = subformat;
		this.blockStateZero = blockStateZero;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("file");
		names.add("size");
		names.add("log-size");
		names.add("block-size");
		names.add("subformat");
		names.add("block-state-zero");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("file".equals(name))
			return file;
		if ("size".equals(name))
			return size;
		if ("log-size".equals(name))
			return logSize;
		if ("block-size".equals(name))
			return blockSize;
		if ("subformat".equals(name))
			return subformat;
		if ("block-state-zero".equals(name))
			return blockStateZero;
		return super.getFieldByName(name);
	}
}
