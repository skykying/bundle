package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=QCryptoBlockCreateOptionsLUKS, data={*cipher-alg=QCryptoCipherAlgorithm, *cipher-mode=QCryptoCipherMode, *ivgen-alg=QCryptoIVGenAlgorithm, *ivgen-hash-alg=QCryptoHashAlgorithm, *hash-alg=QCryptoHashAlgorithm, *iter-time=int}, innerTypes=null, fields=null, base=QCryptoBlockOptionsLUKS}</pre>
 */
// QApiStructDescriptor{name=QCryptoBlockCreateOptionsLUKS, data={*cipher-alg=QCryptoCipherAlgorithm, *cipher-mode=QCryptoCipherMode, *ivgen-alg=QCryptoIVGenAlgorithm, *ivgen-hash-alg=QCryptoHashAlgorithm, *hash-alg=QCryptoHashAlgorithm, *iter-time=int}, innerTypes=null, fields=null, base=QCryptoBlockOptionsLUKS}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class QCryptoBlockCreateOptionsLUKS extends QCryptoBlockOptionsLUKS {

	
	@JsonProperty("cipher-alg")
	@CheckForNull
	public QCryptoCipherAlgorithm cipherAlg;
	
	@JsonProperty("cipher-mode")
	@CheckForNull
	public QCryptoCipherMode cipherMode;
	
	@JsonProperty("ivgen-alg")
	@CheckForNull
	public QCryptoIVGenAlgorithm ivgenAlg;
	
	@JsonProperty("ivgen-hash-alg")
	@CheckForNull
	public QCryptoHashAlgorithm ivgenHashAlg;
	
	@JsonProperty("hash-alg")
	@CheckForNull
	public QCryptoHashAlgorithm hashAlg;
	
	@JsonProperty("iter-time")
	@CheckForNull
	public java.lang.Long iterTime;

	@Nonnull
	public QCryptoBlockCreateOptionsLUKS withCipherAlg(QCryptoCipherAlgorithm value) {
		this.cipherAlg = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockCreateOptionsLUKS withCipherMode(QCryptoCipherMode value) {
		this.cipherMode = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockCreateOptionsLUKS withIvgenAlg(QCryptoIVGenAlgorithm value) {
		this.ivgenAlg = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockCreateOptionsLUKS withIvgenHashAlg(QCryptoHashAlgorithm value) {
		this.ivgenHashAlg = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockCreateOptionsLUKS withHashAlg(QCryptoHashAlgorithm value) {
		this.hashAlg = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockCreateOptionsLUKS withIterTime(java.lang.Long value) {
		this.iterTime = value;
		return this;
	}

	public QCryptoBlockCreateOptionsLUKS() {
	}

	public QCryptoBlockCreateOptionsLUKS(QCryptoCipherAlgorithm cipherAlg, QCryptoCipherMode cipherMode, QCryptoIVGenAlgorithm ivgenAlg, QCryptoHashAlgorithm ivgenHashAlg, QCryptoHashAlgorithm hashAlg, java.lang.Long iterTime) {
		this.cipherAlg = cipherAlg;
		this.cipherMode = cipherMode;
		this.ivgenAlg = ivgenAlg;
		this.ivgenHashAlg = ivgenHashAlg;
		this.hashAlg = hashAlg;
		this.iterTime = iterTime;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("cipher-alg");
		names.add("cipher-mode");
		names.add("ivgen-alg");
		names.add("ivgen-hash-alg");
		names.add("hash-alg");
		names.add("iter-time");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("cipher-alg".equals(name))
			return cipherAlg;
		if ("cipher-mode".equals(name))
			return cipherMode;
		if ("ivgen-alg".equals(name))
			return ivgenAlg;
		if ("ivgen-hash-alg".equals(name))
			return ivgenHashAlg;
		if ("hash-alg".equals(name))
			return hashAlg;
		if ("iter-time".equals(name))
			return iterTime;
		return super.getFieldByName(name);
	}
}
