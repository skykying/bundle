package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=NetdevNetmapOptions, data={ifname=str, *devname=str}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=NetdevNetmapOptions, data={ifname=str, *devname=str}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class NetdevNetmapOptions extends QApiType {

	
	@JsonProperty("ifname")
	@Nonnull
	public java.lang.String ifname;
	
	@JsonProperty("devname")
	@CheckForNull
	public java.lang.String devname;

	@Nonnull
	public NetdevNetmapOptions withIfname(java.lang.String value) {
		this.ifname = value;
		return this;
	}

	@Nonnull
	public NetdevNetmapOptions withDevname(java.lang.String value) {
		this.devname = value;
		return this;
	}

	public NetdevNetmapOptions() {
	}

	public NetdevNetmapOptions(java.lang.String ifname, java.lang.String devname) {
		this.ifname = ifname;
		this.devname = devname;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("ifname");
		names.add("devname");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("ifname".equals(name))
			return ifname;
		if ("devname".equals(name))
			return devname;
		return super.getFieldByName(name);
	}
}
