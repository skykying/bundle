package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=PciInfo, data={bus=int, devices=[PciDeviceInfo]}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=PciInfo, data={bus=int, devices=[PciDeviceInfo]}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class PciInfo extends QApiType {

	
	@JsonProperty("bus")
	@Nonnull
	public long bus;
	
	@JsonProperty("devices")
	@Nonnull
	public java.util.List<PciDeviceInfo> devices;

	@Nonnull
	public PciInfo withBus(long value) {
		this.bus = value;
		return this;
	}

	@Nonnull
	public PciInfo withDevices(java.util.List<PciDeviceInfo> value) {
		this.devices = value;
		return this;
	}

	public PciInfo() {
	}

	public PciInfo(long bus, java.util.List<PciDeviceInfo> devices) {
		this.bus = bus;
		this.devices = devices;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("bus");
		names.add("devices");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("bus".equals(name))
			return bus;
		if ("devices".equals(name))
			return devices;
		return super.getFieldByName(name);
	}
}
