package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiUnionDescriptor{name=NumaOptions, discriminator=type, data={node=NumaNodeOptions, dist=NumaDistOptions, cpu=NumaCpuOptions}, innerTypes=null, fields=null, base={type=NumaOptionsType}, discriminatorField=null}</pre>
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class NumaOptions extends NumaOptionsBase implements QApiUnion {

	// union {
	
	@JsonProperty("node")
	@JsonUnwrapped
	@CheckForNull
	public NumaNodeOptions node;
	
	@JsonProperty("dist")
	@JsonUnwrapped
	@CheckForNull
	public NumaDistOptions dist;
	
	@JsonProperty("cpu")
	@JsonUnwrapped
	@CheckForNull
	public NumaCpuOptions cpu;
	// }

	@Nonnull
	public static NumaOptions node(@Nonnull NumaNodeOptions node) {
		NumaOptions self = new NumaOptions();
		self.type = NumaOptionsType.node;
		self.node = node;
		return self;
	}

	@Nonnull
	public static NumaOptions dist(@Nonnull NumaDistOptions dist) {
		NumaOptions self = new NumaOptions();
		self.type = NumaOptionsType.dist;
		self.dist = dist;
		return self;
	}

	@Nonnull
	public static NumaOptions cpu(@Nonnull NumaCpuOptions cpu) {
		NumaOptions self = new NumaOptions();
		self.type = NumaOptionsType.cpu;
		self.cpu = cpu;
		return self;
	}

	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("node");
		names.add("dist");
		names.add("cpu");
		return names;
	}

	@JsonIgnore
	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("node".equals(name))
			return node;
		if ("dist".equals(name))
			return dist;
		if ("cpu".equals(name))
			return cpu;
		return super.getFieldByName(name);
	}

	@JsonIgnore
	public boolean isValidUnion() {
		int count = 0;
		if (node != null)
			count++;
		if (dist != null)
			count++;
		if (cpu != null)
			count++;
		return (count == 1);
	}
}
