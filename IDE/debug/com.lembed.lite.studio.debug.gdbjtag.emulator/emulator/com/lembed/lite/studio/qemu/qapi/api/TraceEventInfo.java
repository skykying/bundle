package com.lembed.lite.studio.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.lembed.lite.studio.qemu.qapi.common.*;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=TraceEventInfo, data={name=str, state=TraceEventState, vcpu=bool}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=TraceEventInfo, data={name=str, state=TraceEventState, vcpu=bool}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class TraceEventInfo extends QApiType {

	
	@JsonProperty("name")
	@Nonnull
	public java.lang.String name;
	
	@JsonProperty("state")
	@Nonnull
	public TraceEventState state;
	
	@JsonProperty("vcpu")
	@Nonnull
	public boolean vcpu;

	@Nonnull
	public TraceEventInfo withName(java.lang.String value) {
		this.name = value;
		return this;
	}

	@Nonnull
	public TraceEventInfo withState(TraceEventState value) {
		this.state = value;
		return this;
	}

	@Nonnull
	public TraceEventInfo withVcpu(boolean value) {
		this.vcpu = value;
		return this;
	}

	public TraceEventInfo() {
	}

	public TraceEventInfo(java.lang.String name, TraceEventState state, boolean vcpu) {
		this.name = name;
		this.state = state;
		this.vcpu = vcpu;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("name");
		names.add("state");
		names.add("vcpu");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("name".equals(name))
			return name;
		if ("state".equals(name))
			return state;
		if ("vcpu".equals(name))
			return vcpu;
		return super.getFieldByName(name);
	}
}
