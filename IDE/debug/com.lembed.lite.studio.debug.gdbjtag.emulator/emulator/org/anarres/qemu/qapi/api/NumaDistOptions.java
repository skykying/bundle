package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=NumaDistOptions, data={src=uint16, dst=uint16, val=uint8}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=NumaDistOptions, data={src=uint16, dst=uint16, val=uint8}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class NumaDistOptions extends QApiType {

	
	@JsonProperty("src")
	@Nonnull
	public int src;
	
	@JsonProperty("dst")
	@Nonnull
	public int dst;
	
	@JsonProperty("val")
	@Nonnull
	public char val;

	@Nonnull
	public NumaDistOptions withSrc(int value) {
		this.src = value;
		return this;
	}

	@Nonnull
	public NumaDistOptions withDst(int value) {
		this.dst = value;
		return this;
	}

	@Nonnull
	public NumaDistOptions withVal(char value) {
		this.val = value;
		return this;
	}

	public NumaDistOptions() {
	}

	public NumaDistOptions(int src, int dst, char val) {
		this.src = src;
		this.dst = dst;
		this.val = val;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("src");
		names.add("dst");
		names.add("val");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("src".equals(name))
			return src;
		if ("dst".equals(name))
			return dst;
		if ("val".equals(name))
			return val;
		return super.getFieldByName(name);
	}
}
