package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=CpuInstanceProperties, data={*node-id=int, *socket-id=int, *core-id=int, *thread-id=int}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=CpuInstanceProperties, data={*node-id=int, *socket-id=int, *core-id=int, *thread-id=int}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class CpuInstanceProperties extends QApiType {

	
	@JsonProperty("node-id")
	@CheckForNull
	public java.lang.Long nodeId;
	
	@JsonProperty("socket-id")
	@CheckForNull
	public java.lang.Long socketId;
	
	@JsonProperty("core-id")
	@CheckForNull
	public java.lang.Long coreId;
	
	@JsonProperty("thread-id")
	@CheckForNull
	public java.lang.Long threadId;

	@Nonnull
	public CpuInstanceProperties withNodeId(java.lang.Long value) {
		this.nodeId = value;
		return this;
	}

	@Nonnull
	public CpuInstanceProperties withSocketId(java.lang.Long value) {
		this.socketId = value;
		return this;
	}

	@Nonnull
	public CpuInstanceProperties withCoreId(java.lang.Long value) {
		this.coreId = value;
		return this;
	}

	@Nonnull
	public CpuInstanceProperties withThreadId(java.lang.Long value) {
		this.threadId = value;
		return this;
	}

	public CpuInstanceProperties() {
	}

	public CpuInstanceProperties(java.lang.Long nodeId, java.lang.Long socketId, java.lang.Long coreId, java.lang.Long threadId) {
		this.nodeId = nodeId;
		this.socketId = socketId;
		this.coreId = coreId;
		this.threadId = threadId;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("node-id");
		names.add("socket-id");
		names.add("core-id");
		names.add("thread-id");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("node-id".equals(name))
			return nodeId;
		if ("socket-id".equals(name))
			return socketId;
		if ("core-id".equals(name))
			return coreId;
		if ("thread-id".equals(name))
			return threadId;
		return super.getFieldByName(name);
	}
}
