package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=SchemaInfoAlternate, data={members=[SchemaInfoAlternateMember]}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=SchemaInfoAlternate, data={members=[SchemaInfoAlternateMember]}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class SchemaInfoAlternate extends QApiType {

	
	@JsonProperty("members")
	@Nonnull
	public java.util.List<SchemaInfoAlternateMember> members;

	@Nonnull
	public SchemaInfoAlternate withMembers(java.util.List<SchemaInfoAlternateMember> value) {
		this.members = value;
		return this;
	}

	public SchemaInfoAlternate() {
	}

	public SchemaInfoAlternate(java.util.List<SchemaInfoAlternateMember> members) {
		this.members = members;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("members");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("members".equals(name))
			return members;
		return super.getFieldByName(name);
	}
}
