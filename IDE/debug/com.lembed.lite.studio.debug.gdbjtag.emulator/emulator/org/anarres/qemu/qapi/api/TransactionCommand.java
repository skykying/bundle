package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiCommandDescriptor{name=transaction, returns=null, data={actions=[TransactionAction], *properties=TransactionProperties}}</pre>
 */
// QApiCommandDescriptor{name=transaction, returns=null, data={actions=[TransactionAction], *properties=TransactionProperties}}
public class TransactionCommand extends QApiCommand<TransactionCommand.Arguments, TransactionCommand.Response> {
	/** Compound arguments to a TransactionCommand. */
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public static class Arguments {

		
		@JsonProperty("actions")
		@Nonnull
		public java.util.List<TransactionAction> actions;
		
		@JsonProperty("properties")
		@CheckForNull
		public TransactionProperties properties;

		public Arguments() {
		}

		public Arguments(java.util.List<TransactionAction> actions, TransactionProperties properties) {
			this.actions = actions;
			this.properties = properties;
		}
	}

	/** Response to a TransactionCommand. */
	public static class Response extends QApiResponse<java.lang.Void> {
	}

	/** Constructs a new TransactionCommand. */
	public TransactionCommand(@Nonnull TransactionCommand.Arguments argument) {
		super("transaction", Response.class, argument);
	}

	/** Constructs a new TransactionCommand. */
	public TransactionCommand(java.util.List<TransactionAction> actions, TransactionProperties properties) {
		this(new Arguments(actions, properties));
	}
}
