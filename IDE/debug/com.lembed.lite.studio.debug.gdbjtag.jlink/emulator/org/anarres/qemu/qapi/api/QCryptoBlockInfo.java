package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiUnionDescriptor{name=QCryptoBlockInfo, discriminator=format, data={qcow=QCryptoBlockInfoQCow, luks=QCryptoBlockInfoLUKS}, innerTypes=null, fields=null, base=QCryptoBlockInfoBase, discriminatorField=null}</pre>
 */
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class QCryptoBlockInfo extends QCryptoBlockInfoBase implements QApiUnion {

	// union {
	
	@JsonProperty("qcow")
	@JsonUnwrapped
	@CheckForNull
	public QCryptoBlockInfoQCow qcow;
	
	@JsonProperty("luks")
	@JsonUnwrapped
	@CheckForNull
	public QCryptoBlockInfoLUKS luks;
	// }

	@Nonnull
	public static QCryptoBlockInfo qcow(@Nonnull QCryptoBlockInfoQCow qcow) {
		QCryptoBlockInfo self = new QCryptoBlockInfo();
		self.format = QCryptoBlockFormat.qcow;
		self.qcow = qcow;
		return self;
	}

	@Nonnull
	public static QCryptoBlockInfo luks(@Nonnull QCryptoBlockInfoLUKS luks) {
		QCryptoBlockInfo self = new QCryptoBlockInfo();
		self.format = QCryptoBlockFormat.luks;
		self.luks = luks;
		return self;
	}

	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("qcow");
		names.add("luks");
		return names;
	}

	@JsonIgnore
	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("qcow".equals(name))
			return qcow;
		if ("luks".equals(name))
			return luks;
		return super.getFieldByName(name);
	}

	@JsonIgnore
	public boolean isValidUnion() {
		int count = 0;
		if (qcow != null)
			count++;
		if (luks != null)
			count++;
		return (count == 1);
	}
}
