package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=SevCapability, data={pdh=str, cert-chain=str, cbitpos=int, reduced-phys-bits=int}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=SevCapability, data={pdh=str, cert-chain=str, cbitpos=int, reduced-phys-bits=int}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class SevCapability extends QApiType {

	
	@JsonProperty("pdh")
	@Nonnull
	public java.lang.String pdh;
	
	@JsonProperty("cert-chain")
	@Nonnull
	public java.lang.String certChain;
	
	@JsonProperty("cbitpos")
	@Nonnull
	public long cbitpos;
	
	@JsonProperty("reduced-phys-bits")
	@Nonnull
	public long reducedPhysBits;

	@Nonnull
	public SevCapability withPdh(java.lang.String value) {
		this.pdh = value;
		return this;
	}

	@Nonnull
	public SevCapability withCertChain(java.lang.String value) {
		this.certChain = value;
		return this;
	}

	@Nonnull
	public SevCapability withCbitpos(long value) {
		this.cbitpos = value;
		return this;
	}

	@Nonnull
	public SevCapability withReducedPhysBits(long value) {
		this.reducedPhysBits = value;
		return this;
	}

	public SevCapability() {
	}

	public SevCapability(java.lang.String pdh, java.lang.String certChain, long cbitpos, long reducedPhysBits) {
		this.pdh = pdh;
		this.certChain = certChain;
		this.cbitpos = cbitpos;
		this.reducedPhysBits = reducedPhysBits;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("pdh");
		names.add("cert-chain");
		names.add("cbitpos");
		names.add("reduced-phys-bits");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("pdh".equals(name))
			return pdh;
		if ("cert-chain".equals(name))
			return certChain;
		if ("cbitpos".equals(name))
			return cbitpos;
		if ("reduced-phys-bits".equals(name))
			return reducedPhysBits;
		return super.getFieldByName(name);
	}
}
