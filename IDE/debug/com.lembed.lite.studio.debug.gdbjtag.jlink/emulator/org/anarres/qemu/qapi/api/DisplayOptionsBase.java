package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiTypeDescriptor{name=DisplayOptionsBase, data={type=DisplayType, *full-screen=bool, *window-close=bool, *gl=bool}, innerTypes=null}</pre>
 */
// QApiTypeDescriptor{name=DisplayOptionsBase, data={type=DisplayType, *full-screen=bool, *window-close=bool, *gl=bool}, innerTypes=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class DisplayOptionsBase extends QApiType {

	
	@JsonProperty("type")
	@Nonnull
	public DisplayType type;
	
	@JsonProperty("full-screen")
	@CheckForNull
	public java.lang.Boolean fullScreen;
	
	@JsonProperty("window-close")
	@CheckForNull
	public java.lang.Boolean windowClose;
	
	@JsonProperty("gl")
	@CheckForNull
	public java.lang.Boolean gl;

	@Nonnull
	public DisplayOptionsBase withType(DisplayType value) {
		this.type = value;
		return this;
	}

	@Nonnull
	public DisplayOptionsBase withFullScreen(java.lang.Boolean value) {
		this.fullScreen = value;
		return this;
	}

	@Nonnull
	public DisplayOptionsBase withWindowClose(java.lang.Boolean value) {
		this.windowClose = value;
		return this;
	}

	@Nonnull
	public DisplayOptionsBase withGl(java.lang.Boolean value) {
		this.gl = value;
		return this;
	}

	public DisplayOptionsBase() {
	}

	public DisplayOptionsBase(DisplayType type, java.lang.Boolean fullScreen, java.lang.Boolean windowClose, java.lang.Boolean gl) {
		this.type = type;
		this.fullScreen = fullScreen;
		this.windowClose = windowClose;
		this.gl = gl;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("type");
		names.add("full-screen");
		names.add("window-close");
		names.add("gl");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("type".equals(name))
			return type;
		if ("full-screen".equals(name))
			return fullScreen;
		if ("window-close".equals(name))
			return windowClose;
		if ("gl".equals(name))
			return gl;
		return super.getFieldByName(name);
	}
}
