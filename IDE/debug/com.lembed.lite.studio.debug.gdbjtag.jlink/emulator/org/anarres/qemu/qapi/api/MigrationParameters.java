package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=MigrationParameters, data={*compress-level=uint8, *compress-threads=uint8, *decompress-threads=uint8, *cpu-throttle-initial=uint8, *cpu-throttle-increment=uint8, *tls-creds=str, *tls-hostname=str, *max-bandwidth=size, *downtime-limit=uint64, *x-checkpoint-delay=uint32, *block-incremental=bool, *x-multifd-channels=uint8, *x-multifd-page-count=uint32, *xbzrle-cache-size=size}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=MigrationParameters, data={*compress-level=uint8, *compress-threads=uint8, *decompress-threads=uint8, *cpu-throttle-initial=uint8, *cpu-throttle-increment=uint8, *tls-creds=str, *tls-hostname=str, *max-bandwidth=size, *downtime-limit=uint64, *x-checkpoint-delay=uint32, *block-incremental=bool, *x-multifd-channels=uint8, *x-multifd-page-count=uint32, *xbzrle-cache-size=size}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class MigrationParameters extends QApiType {

	
	@JsonProperty("compress-level")
	@CheckForNull
	public char compressLevel;
	
	@JsonProperty("compress-threads")
	@CheckForNull
	public char compressThreads;
	
	@JsonProperty("decompress-threads")
	@CheckForNull
	public char decompressThreads;
	
	@JsonProperty("cpu-throttle-initial")
	@CheckForNull
	public char cpuThrottleInitial;
	
	@JsonProperty("cpu-throttle-increment")
	@CheckForNull
	public char cpuThrottleIncrement;
	
	@JsonProperty("tls-creds")
	@CheckForNull
	public java.lang.String tlsCreds;
	
	@JsonProperty("tls-hostname")
	@CheckForNull
	public java.lang.String tlsHostname;
	
	@JsonProperty("max-bandwidth")
	@CheckForNull
	public java.lang.Long maxBandwidth;
	
	@JsonProperty("downtime-limit")
	@CheckForNull
	public java.lang.Long downtimeLimit;
	
	@JsonProperty("x-checkpoint-delay")
	@CheckForNull
	public java.lang.Long xCheckpointDelay;
	
	@JsonProperty("block-incremental")
	@CheckForNull
	public java.lang.Boolean blockIncremental;
	
	@JsonProperty("x-multifd-channels")
	@CheckForNull
	public char xMultifdChannels;
	
	@JsonProperty("x-multifd-page-count")
	@CheckForNull
	public java.lang.Long xMultifdPageCount;
	
	@JsonProperty("xbzrle-cache-size")
	@CheckForNull
	public java.lang.Long xbzrleCacheSize;

	@Nonnull
	public MigrationParameters withCompressLevel(char value) {
		this.compressLevel = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withCompressThreads(char value) {
		this.compressThreads = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withDecompressThreads(char value) {
		this.decompressThreads = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withCpuThrottleInitial(char value) {
		this.cpuThrottleInitial = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withCpuThrottleIncrement(char value) {
		this.cpuThrottleIncrement = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withTlsCreds(java.lang.String value) {
		this.tlsCreds = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withTlsHostname(java.lang.String value) {
		this.tlsHostname = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withMaxBandwidth(java.lang.Long value) {
		this.maxBandwidth = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withDowntimeLimit(java.lang.Long value) {
		this.downtimeLimit = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withXCheckpointDelay(java.lang.Long value) {
		this.xCheckpointDelay = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withBlockIncremental(java.lang.Boolean value) {
		this.blockIncremental = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withXMultifdChannels(char value) {
		this.xMultifdChannels = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withXMultifdPageCount(java.lang.Long value) {
		this.xMultifdPageCount = value;
		return this;
	}

	@Nonnull
	public MigrationParameters withXbzrleCacheSize(java.lang.Long value) {
		this.xbzrleCacheSize = value;
		return this;
	}

	public MigrationParameters() {
	}

	public MigrationParameters(char compressLevel, char compressThreads, char decompressThreads, char cpuThrottleInitial, char cpuThrottleIncrement, java.lang.String tlsCreds, java.lang.String tlsHostname, java.lang.Long maxBandwidth, java.lang.Long downtimeLimit, java.lang.Long xCheckpointDelay, java.lang.Boolean blockIncremental, char xMultifdChannels, java.lang.Long xMultifdPageCount, java.lang.Long xbzrleCacheSize) {
		this.compressLevel = compressLevel;
		this.compressThreads = compressThreads;
		this.decompressThreads = decompressThreads;
		this.cpuThrottleInitial = cpuThrottleInitial;
		this.cpuThrottleIncrement = cpuThrottleIncrement;
		this.tlsCreds = tlsCreds;
		this.tlsHostname = tlsHostname;
		this.maxBandwidth = maxBandwidth;
		this.downtimeLimit = downtimeLimit;
		this.xCheckpointDelay = xCheckpointDelay;
		this.blockIncremental = blockIncremental;
		this.xMultifdChannels = xMultifdChannels;
		this.xMultifdPageCount = xMultifdPageCount;
		this.xbzrleCacheSize = xbzrleCacheSize;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("compress-level");
		names.add("compress-threads");
		names.add("decompress-threads");
		names.add("cpu-throttle-initial");
		names.add("cpu-throttle-increment");
		names.add("tls-creds");
		names.add("tls-hostname");
		names.add("max-bandwidth");
		names.add("downtime-limit");
		names.add("x-checkpoint-delay");
		names.add("block-incremental");
		names.add("x-multifd-channels");
		names.add("x-multifd-page-count");
		names.add("xbzrle-cache-size");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("compress-level".equals(name))
			return compressLevel;
		if ("compress-threads".equals(name))
			return compressThreads;
		if ("decompress-threads".equals(name))
			return decompressThreads;
		if ("cpu-throttle-initial".equals(name))
			return cpuThrottleInitial;
		if ("cpu-throttle-increment".equals(name))
			return cpuThrottleIncrement;
		if ("tls-creds".equals(name))
			return tlsCreds;
		if ("tls-hostname".equals(name))
			return tlsHostname;
		if ("max-bandwidth".equals(name))
			return maxBandwidth;
		if ("downtime-limit".equals(name))
			return downtimeLimit;
		if ("x-checkpoint-delay".equals(name))
			return xCheckpointDelay;
		if ("block-incremental".equals(name))
			return blockIncremental;
		if ("x-multifd-channels".equals(name))
			return xMultifdChannels;
		if ("x-multifd-page-count".equals(name))
			return xMultifdPageCount;
		if ("xbzrle-cache-size".equals(name))
			return xbzrleCacheSize;
		return super.getFieldByName(name);
	}
}
