package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=BlockdevOptionsNull, data={*size=int, *latency-ns=uint64}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=BlockdevOptionsNull, data={*size=int, *latency-ns=uint64}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BlockdevOptionsNull extends QApiType {

	
	@JsonProperty("size")
	@CheckForNull
	public java.lang.Long size;
	
	@JsonProperty("latency-ns")
	@CheckForNull
	public java.lang.Long latencyNs;

	@Nonnull
	public BlockdevOptionsNull withSize(java.lang.Long value) {
		this.size = value;
		return this;
	}

	@Nonnull
	public BlockdevOptionsNull withLatencyNs(java.lang.Long value) {
		this.latencyNs = value;
		return this;
	}

	public BlockdevOptionsNull() {
	}

	public BlockdevOptionsNull(java.lang.Long size, java.lang.Long latencyNs) {
		this.size = size;
		this.latencyNs = latencyNs;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("size");
		names.add("latency-ns");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("size".equals(name))
			return size;
		if ("latency-ns".equals(name))
			return latencyNs;
		return super.getFieldByName(name);
	}
}
