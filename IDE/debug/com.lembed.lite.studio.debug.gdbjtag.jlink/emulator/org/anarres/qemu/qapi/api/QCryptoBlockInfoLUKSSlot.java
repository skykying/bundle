package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <pre>QApiStructDescriptor{name=QCryptoBlockInfoLUKSSlot, data={active=bool, *iters=int, *stripes=int, key-offset=int}, innerTypes=null, fields=null, base=null}</pre>
 */
// QApiStructDescriptor{name=QCryptoBlockInfoLUKSSlot, data={active=bool, *iters=int, *stripes=int, key-offset=int}, innerTypes=null, fields=null, base=null}
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class QCryptoBlockInfoLUKSSlot extends QApiType {

	
	@JsonProperty("active")
	@Nonnull
	public boolean active;
	
	@JsonProperty("iters")
	@CheckForNull
	public java.lang.Long iters;
	
	@JsonProperty("stripes")
	@CheckForNull
	public java.lang.Long stripes;
	
	@JsonProperty("key-offset")
	@Nonnull
	public long keyOffset;

	@Nonnull
	public QCryptoBlockInfoLUKSSlot withActive(boolean value) {
		this.active = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockInfoLUKSSlot withIters(java.lang.Long value) {
		this.iters = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockInfoLUKSSlot withStripes(java.lang.Long value) {
		this.stripes = value;
		return this;
	}

	@Nonnull
	public QCryptoBlockInfoLUKSSlot withKeyOffset(long value) {
		this.keyOffset = value;
		return this;
	}

	public QCryptoBlockInfoLUKSSlot() {
	}

	public QCryptoBlockInfoLUKSSlot(boolean active, java.lang.Long iters, java.lang.Long stripes, long keyOffset) {
		this.active = active;
		this.iters = iters;
		this.stripes = stripes;
		this.keyOffset = keyOffset;
	}

	@JsonIgnore
	@Override
	public java.util.List<java.lang.String> getFieldNames() {
		java.util.List<java.lang.String> names = super.getFieldNames();
		names.add("active");
		names.add("iters");
		names.add("stripes");
		names.add("key-offset");
		return names;
	}

	@Override
	public Object getFieldByName(@Nonnull java.lang.String name) throws NoSuchFieldException {
		if ("active".equals(name))
			return active;
		if ("iters".equals(name))
			return iters;
		if ("stripes".equals(name))
			return stripes;
		if ("key-offset".equals(name))
			return keyOffset;
		return super.getFieldByName(name);
	}
}
