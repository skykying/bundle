###############################################################################
#  Copyright (c) 2008-2010 QNX Software Systems and others.
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  which accompanies this distribution, and is available at
#  http://www.eclipse.org/legal/epl-v10.html
# 
#  Contributors:
#      QNX Software Systems - initial API and implementation
#      Bruce Griffith,Sage Electronic Engineering, LLC - bug 305943
#               - API generalization to become transport-independent (e.g. to
#                 allow connections via serial ports and pipes).
#      Liviu Ionescu - ARM version
#      Lembed - for LiteSTUDIO
###############################################################################


##### DebuggerTab #####
DebuggerTab.interfaceGroup_Text=Debug Interface Select
DebuggerTab.interface_Label=Interface:
DebuggerTab.interfaceJtag_Text=JTAG
DebuggerTab.interfaceSWD_Text=SWD
DebuggerTab.interface_ToolTipText=\
Select the interface which is used by\n\
STLink to connect to the target. Currently\n\
JTAG and SWD are supported.

DebuggerTab.noReset_Text=Connect to running target
DebuggerTab.noReset_ToolTipText=\
Start the STLink without issuing a reset,\n\
initialising the registers or programming\n\
the flash. This is useful to connect to a\n\
running device that was not started via\n\
the debugger. 

DebuggerTab.deviceGroup_Text=Device Select
DebuggerTab.deviceName_Label=Device name:
DebuggerTab.deviceName_Link=\
<a href="http://www.st.com/supported-devices.html">Supported device names</a>

DebuggerTab.deviceName_ToolTipText=\
Tell GDBServer to which device STLink is\n\
connected. Necessary to enable programming\n\
of internal flash memory. For a list of\n\
all supported device names, please refer\n\
to http://www.st.com/supported-devices.html.

DebuggerTab.endianness_Label=Endianness:
DebuggerTab.endianness_ToolTipText=\
Most of the ARM cores (including the Cortex-M\n\
families) are little endian, with bigger ones\n\
being bi-endian.

DebuggerTab.endiannesslittle_Text=Little
DebuggerTab.endiannessBig_Text=Big

DebuggerTab.gdbServerGroup_Text=STLink GDB Server Setup

DebuggerTab.doStartGdbServer_Text=Start the STLink GDB server locally
DebuggerTab.doStartGdbServer_ToolTipText=\
Automatically start/stop the STLink GDB\n\
server locally for each debug session.\n\
The alternate way is to start the server\n\
manually and to keep it running continuously,\n\
either locally or on a remote machine.

DebuggerTab.gdbServerExecutable_Label=Executable:
DebuggerTab.gdbServerExecutable_ToolTipText=\
The GDB server executable, usually\n\
${stlink_path}/${stlink_gdbserver}. Be sure\n\
you define the stlink_path properly in the\n\
Run/Debug -> String Substitution settings.

DebuggerTab.gdbServerPathGroup_Text=GDB Server Path

DebuggerTab.gdbServerExecutableBrowse=Browse...
DebuggerTab.gdbServerExecutableBrowse_Title=Select GDB Server Binary
DebuggerTab.gdbServerExecutableVariable=Variables...

DebuggerTab.gdbServerConnection_Label=Connection:
DebuggerTab.gdbServerConnection_ToolTipText=\
The type of the connection between the GDB\n\
Server and STlink. Can be either USB (default)\n\
or IP. When connecting multiple USB STlink\n\
probes, it is required to enter the serial number\n\
to identify the desired probe. For IP it is \n\
necessary to enter the IP address or DNS name.

DebuggerTab.connectionUsb_Text=USB
DebuggerTab.connectionTcp_Text=IP
DebuggerTab.connectionAfter_Text=(USB serial or IP name/address)

DebuggerTab.gdbServerSpeed_Label=Initial speed:
DebuggerTab.gdbServerSpeed_ToolTipText=\
Set the initial JTAG/SWD speed of STlink,\n\
to be used during the reset sequence. Speed\n\
can be either fixed (in kHz), automatic \n\
recognition or adaptive. It is recommended\n\
to start with low speed.

DebuggerTab.gdbServerSpeedAuto_Text=Auto
DebuggerTab.gdbServerSpeedAdaptive_Text=Adaptive
DebuggerTab.gdbServerSpeedFixed_Text=Fixed
DebuggerTab.gdbServerSpeedFixedUnit_Text=kHz

DebuggerTab.gdbServerGdbPort_Label=GDB port:
DebuggerTab.gdbServerGdbPort_ToolTipText=\
The port on which the STlink GDB Server\n\
should listen for an incoming connection\n\
from the GDB client (default 2331).

DebuggerTab.gdbServerSwoPort_Label=SWO port:
DebuggerTab.gdbServerSwoPort_ToolTipText=\
The port on which the STlink GDB Server\n\
should listen for an incoming connection\n\
that reads the SWO data (default 2332).

DebuggerTab.gdbServerTelnetPort_Label=Telnet port:
DebuggerTab.gdbServerTelnetPort_ToolTipText=\
The port on which the STlink GDB Server\n\
should listen for an incoming connection\n\
that reads the semihosting output and the\n\
parsed SWO output (default 2333).

DebuggerTab.gdbServerVerifyDownload_Label=Verify downloads
DebuggerTab.gdbServerVerifyDownload_ToolTipText=\
Verify the downloaded program in the target\n\
after programming.

DebuggerTab.gdbServerInitRegs_Label=Initialize registers on start
DebuggerTab.gdbServerInitRegs_ToolTipText=\
Initializes the CPU registers with default\n\
values on startup.

DebuggerTab.gdbServerLocalOnly_Label=Local host only
DebuggerTab.gdbServerLocalOnly_ToolTipText=\
Listen on localhost only. This means that\n\
only TCP/IP connections from localhost are\n\
accepted. To allow remote debugging\n\
(connecting to GDBServer from another PC),\n\
do NOT use this option.

DebuggerTab.gdbServerSilent_Label=Silent
DebuggerTab.gdbServerSilent_ToolTipText=\
Starts the STlink GDB Server in silent mode.\n\
No log window messages will be shown.

DebuggerTab.gdbServerLog_Label=Log file:
DebuggerTab.gdbServerLogBrowse_Button=Browse...
DebuggerTab.gdbServerLogBrowse_Title=Select where to store the log file

DebuggerTab.gdbServerOther_Label=Other options:

DebuggerTab.gdbServerAllocateConsole_Label=Allocate console for the GDB server
DebuggerTab.gdbServerAllocateConsole_ToolTipText=\
Allocate an Eclipse console where the output\n\
generated by the GDB server will be displayed.

DebuggerTab.gdbServerAllocateSemihostingConsole_Label=Allocate console for semihosting and SWO 
DebuggerTab.gdbServerAllocateSemihostingConsole_ToolTipText=\
Allocate an Eclipse console where the trace\n\
messages generated by the semihosting output\n\
and debug channels will be displayed. The SWO\n\
binary output is parsed and the ascii messages\n\
are also displayed here.

DebuggerTab.gdbSetupGroup_Text=GDB Client Setup

DebuggerTab.gdbCommand_Label=Executable:
DebuggerTab.gdbCommand_ToolTipText=\
The GDB client executable, for example\n\
${cross_prefix}gdb${cross_suffix}. The\n\
substitution is done using the project\n\
macros and toolchain path.

DebuggerTab.gdbCommandBrowse=Browse...
DebuggerTab.gdbCommandBrowse_Title=Select GDB Client Binary
DebuggerTab.gdbCommandVariable=Variables...

DebuggerTab.gdbOtherOptions_Label=Other options:
DebuggerTab.gdbOtherOptions_ToolTipText=\
Additional command line options to be passed\n\
to the GDB client. They are added to the\n\
mandatory '--interpreter=mi2 --nx' passed first. 

DebuggerTab.gdbOtherCommands_Label=Commands:
DebuggerTab.gdbOtherCommands_ToolTipText=\
Additional commands that can be passed to the\n\
GDB client. They are executed just before\n\
the eventual .gdbinit, before connecting to\n\
the target. Other useful commands are:\n\
'set debug remote 1', 'set remotetimeout 20'.


DebuggerTab.remoteGroup_Text=Remote Target
DebuggerTab.ipAddressLabel=Host name or IP address:
DebuggerTab.portNumberLabel=Port number:


DebuggerTab.update_thread_list_on_suspend_Text=Force thread list update on suspend
DebuggerTab.update_thread_list_on_suspend_ToolTipText=\
This checkbox controls whether the CDT\n\
debugger will ask gdb for the target\n\
program's thread list on each suspend\n\
event (breakpoint-hit, step, etc). Normally,\n\
this isn't necessary, as GDB sends\n\
notifications in realtime when a thread is\n\
created or destroyed. However, some\n\
lightweight GDB remote stubs won't\n\
send these notifications. As such, the\n\
CDT debugger doesn't find out about\n\
new or destroyed threads unless it polls\n\
gdb. Turn on this option if you are\n\
debugging such a target (typically an\n\
embedded one).

# Also used by StartupTab.
DebuggerTab.restoreDefaults_Link=<a>Restore defaults</a>
DebuggerTab.restoreDefaults_ToolTipText=\
Restore all fields to their default values.\n\
Current values will be lost.

##### StartupTab #####
StartupTab.initGroup_Text=Initialization Commands

StartupTab.doFirstReset_Text=Initial Reset and Halt.
StartupTab.doFirstReset_ToolTipText=\
Perform an initial reset and halt; this will\n\
take the processor out of whatever state it\n\
was and prepare it for programming the flash.\n\
Normally the GDB server performs a reset\n\
when starting, so this is especially useful\n\
when a specific reset type is required. It\n\
is disabled when the 'Connect to running'\n\
option is used. The generated commands are:\n\
monitor speed <speed>\n\
monitor clrbp\n\
monitor reset <type>\n\
monitor halt\n\
monitor regs\n\
flushreg

StartupTab.firstResetType_Text=Type:
StartupTab.firstResetType_ToolTipText=\
There are different reset strategies for\n\
different CPUs. Moreover, the reset strategies\n\
which are available differ from CPU core to\n\
CPU core. For a complete list of all reset\n\
strategies which are supported by the GDB\n\
Server please refer to UM08001.\n\
If no reset type is specified, the reset\n\
type 0 ("Normal") will be used.

StartupTab.firstResetSpeed_Text=Low speed:
StartupTab.firstResetSpeed_ToolTipText=\
The initial communication can be performed\n\
at a lower speed, to be absolutely sure\n\
that the reset command is understood.
StartupTab.firstResetSpeedUnit_Text=kHz

StartupTab.interfaceSpeed_Label=JTAG/SWD Speed:
StartupTab.interfaceSpeed_ToolTipText=\
Set the JTAG/SWD speed of STlink. Speed can\n\
be either fixed (in kHz), automatic recognition\n\
or adaptive. In general, Adaptive is\n\
recommended if the target has an RTCK signal\n\
which is connected to the corresponding RTCK\n\
pin of the device (S-cores only).\n\
The generated commands is\n\
'monitor speed <speed>'.

StartupTab.interfaceSpeedAuto_Text=Auto
StartupTab.interfaceSpeedAdaptive_Text=Adaptive
StartupTab.interfaceSpeedFixed_Text=Fixed
StartupTab.interfaceSpeedFixedUnit_Text=kHz

StartupTab.enableFlashBreakpoints_Text=Enable flash breakpoints.
StartupTab.enableFlashBreakpoints_ToolTipText=\
Flash breakpoints allows setting of an \n\
unlimited number of breakpoints even if \n\
the user application is not located in RAM.\n\
The generated command is\n\
'monitor flash breakpoints 1'.

StartupTab.initCommands_ToolTipText=\
Additional or alternate initialisation\n\
commands. To reach the GDB server, the\n\
commands should be prefixed with 'monitor'.

StartupTab.enableSemihosting_Text=Enable semihosting.
StartupTab.enableSemihosting_ToolTipText=\
Enable support for semihosting. In addition\n\
to full semihosting test applications, this\n\
is also needed to display debug trace\n\
messages in retargetted applications. The\n\
trace messages are routed via port 2333\n\
and/or the GDB client console.\n\
The generated commands are:\n\
monitor semihosting enable\n\
monitor semihosting IOClient <N>

StartupTab.enableSemihostingRouted_Text=Console routed to:
StartupTab.enableSemihostingRouted_ToolTipText=\
Selects where to print output and get input\n\
from.

StartupTab.semihostingTelnet_Text=Telnet
StartupTab.semihostingTelnet_ToolTipText=\
Print output and get input from the telnet\n\
client (standard port 2333) (Default).

StartupTab.semihostingGdbClient_Text=GDB client
StartupTab.semihostingGdbClient_ToolTipText=\
Print output and get input from the GDB\n\
client console window.

StartupTab.enableSwo_Text=Enable SWO.
StartupTab.enableSwo_ToolTipText=\
Enable support for SWO debug trace messages.\n\
The parsed trace messages are routed via\n\
port 2333.\n\
The generated commands are:\n\
monitor SWO DisableTarget 0xFFFFFFFF\n\
monitor SWO EnableTarget 0 0 0x1 0

StartupTab.swoEnableTargetCpuFreq_Text=CPU freq:
StartupTab.swoEnableTargetCpuFreq_ToolTipText=\
The frequency the CPU will be constantly\n\
running after the initialisation phase. If\n\
the value is 0 it will be measured by STlink,\n\
but usually this will be the initial RC value,\n\
much lower than the actual value, after\n\
initialising the PLL. 

StartupTab.swoEnableTargetCpuFreqUnit_Text=Hz.

StartupTab.swoEnableTargetSwoFreq_Text=SWO freq:
StartupTab.swoEnableTargetSwoFreq_ToolTipText=\
The desired output frequency of the SWO pin. It\n\
must be a submultiple of 6MHz (6000000/n,\n\
where n>0) and at the same time a submultiple\n\
of the CPU frequency. If the value is 0 it\n\
will be automatically set to the highest\n\
possible value for the given CPU frequency.

StartupTab.swoEnableTargetSwoFreqUnit_Text=Hz.

StartupTab.swoEnableTargetPortMask_Text=Port mask:
StartupTab.swoEnableTargetPortMask_ToolTipText=\
The ITM channels to enable, 1=channel 0,\n\
2=channel 1, 4 channel 2, etc.


StartupTab.loadGroup_Text=Load Symbols and Executable
StartupTab.loadImage_Text=Load executable

StartupTab.useProjectBinary_Label=Use project binary:
StartupTab.useProjectBinary_ToolTipText=Use C/C++ application specified in the Main tab.

StartupTab.useFile_Label=Use file:
StartupTab.FileBrowseWs_Label=Workspace...
StartupTab.FileBrowse_Label=File System...
StartupTab.imageOffsetLabel_Text=Executable offset (hex):
StartupTab.symbolsOffsetLabel_Text=Symbols offset (hex):

StartupTab.loadSymbols_Text=Load symbols

StartupTab.imageFileBrowseWs_Title=Select executable file
StartupTab.imageFileBrowse_Title=Select executable file

StartupTab.symbolsFileBrowseWs_Title=Select symbols file
StartupTab.symbolsFileBrowse_Title=Select symbols file

StartupTab.runOptionGroup_Text=Runtime Options
StartupTab.setPcRegister_Text=Set program counter at (hex):
StartupTab.setStopAt_Text=Set breakpoint at:
StartupTab.setResume_Text=Resume

StartupTab.doDebugInRam_Text=RAM application (reload after each reset/restart) 
StartupTab.doDebugInRam_ToolTipText=\
Supports debugging from RAM instead of\n\
flash by loading the executable after\n\
each reset/restart, not only once\n\
after the initial reset.

StartupTab.runGroup_Text=Run/Restart Commands

StartupTab.doSecondReset_Text=Pre-run/Restart reset.
StartupTab.doSecondReset_ToolTipText=\
Perform a second reset and halt; this will\n\
prepare the processor to start execution\n\
from a known state. It is disabled when the\n\
'Connect to running' option is used.\n\
It is always performed at Restart.\n\
The generated commands are:\n\
monitor clrbp\n\
monitor reset <type>\n\
monitor halt

StartupTab.secondResetType_Text=Type:
StartupTab.secondResetWarning_Text=(always executed at Restart)

StartupTab.setPcRegister_ToolTipText=\
Set the PC to a different address than\n\
the Reset address. The generated command\n\
is 'set $pc=0x<value>'.

StartupTab.pcRegister_ToolTipText=\
A hex address (no 0x prefix required).

StartupTab.setStopAt_ToolTipText=\
Set a temporary breakpoint at the given\n\
symbol. The generated command is\n\
'tbreak <symbol>'.

StartupTab.runCommands_ToolTipText=\
Additional or alternate commands to be\n\
send before starting execution.\n\
Example: set $sp=0xNNN.\n\
To reach the GDB server, the commands\n\
should be prefixed with 'monitor'.

StartupTab.doContinue_Text=Continue
StartupTab.doContinue_ToolTipText=\
Continue execution from the point where it\n\
was halted after reset.


StartupTab.imageFileName_not_specified=Image file name not specified
StartupTab.imageFileName_does_not_exist=Image file does not exist
StartupTab.imageOffset_not_specified=Image offset not specified
StartupTab.symbolsFileName_not_specified=Symbols file name not specified
StartupTab.symbolsFileName_does_not_exist=Symbols file does not exist
StartupTab.symbolsOffset_not_specified=Symbols offset not specified
StartupTab.pcRegister_not_specified=Program counter not specified
StartupTab.stopAt_not_specified=Breakpoint location not specified

StartupTab.FileBrowseWs_Message=Select a workspace resource

### legacy ### ----------------------------------------------------------------
GDBJtagStartupTab.initGroup_Text=Initialization Commands
GDBJtagStartupTab.doReset_Text=Reset and Delay (seconds):
GDBJtagStartupTab.doHalt_Text=Halt

GDBJtagStartupTab.loadGroup_Text=Load Image and Symbols
GDBJtagStartupTab.loadImage_Text=Load image
GDBJtagStartupTab.imageLabel_Text=Image file name:
GDBJtagStartupTab.imageFileBrowseWs_Title=Select image file
GDBJtagStartupTab.imageFileBrowse_Title=Select image file
GDBJtagStartupTab.imageOffsetLabel_Text=Image offset (hex):
GDBJtagStartupTab.FileBrowseWs_Label=Workspace...
GDBJtagStartupTab.FileBrowseWs_Message=Select a workspace resource
GDBJtagStartupTab.FileBrowse_Label=File System...
GDBJtagStartupTab.FileBrowse_Message=Select a file from file system
GDBJtagStartupTab.loadSymbols_Text=Load symbols
GDBJtagStartupTab.symbolsLabel_Text=Symbols file name:
GDBJtagStartupTab.symbolsFileBrowseWs_Title=Select symbols file
GDBJtagStartupTab.symbolsFileBrowse_Title=Select symbols file
GDBJtagStartupTab.symbolsOffsetLabel_Text=Symbols offset (hex):
GDBJtagStartupTab.useProjectBinary_Label=Use project binary:
GDBJtagStartupTab.useFile_Label=Use file:
GDBJtagStartupTab.useProjectBinary_ToolTip=Use C/C++ application specified in the Main tab.

GDBJtagStartupTab.runOptionGroup_Text=Runtime Options
GDBJtagStartupTab.setPcRegister_Text=Set program counter at (hex):
GDBJtagStartupTab.setStopAt_Text=Set breakpoint at:
GDBJtagStartupTab.setResume_Text=Resume

GDBJtagStartupTab.runGroup_Text=Run Commands

GDBJtagStartupTab.imageFileName_not_specified=Image file name not specified
GDBJtagStartupTab.imageFileName_does_not_exist=Image file does not exist
GDBJtagStartupTab.imageOffset_not_specified=Image offset not specified
GDBJtagStartupTab.symbolsFileName_not_specified=Symbols file name not specified
GDBJtagStartupTab.symbolsFileName_does_not_exist=Symbols file does not exist
GDBJtagStartupTab.symbolsOffset_not_specified=Symbols offset not specified
GDBJtagStartupTab.pcRegister_not_specified=Program counter not specified
GDBJtagStartupTab.stopAt_not_specified=Breakpoint location not specified

GDBJtagDebuggerTab.gdbSetupGroup_Text=GDB Client Setup
GDBJtagDebuggerTab.gdbCommandLabel=GDB Client Command:
GDBJtagDebuggerTab.gdbCommandBrowse=Browse...
GDBJtagDebuggerTab.gdbCommandBrowse_Title=Select GDB Client Binary
GDBJtagDebuggerTab.gdbCommandVariable=Variables...
GDBJtagDebuggerTab.commandFactoryLabel=Command Set:
GDBJtagDebuggerTab.miProtocolLabel=Protocol Version:
GDBJtagDebuggerTab.verboseModeLabel=Verbose console mode
GDBJtagDebuggerTab.remoteGroup_Text=Remote Target
GDBJtagDebuggerTab.useRemote_Text=Use remote target
GDBJtagDebuggerTab.jtagDeviceLabel=JTAG Device:
GDBJtagDebuggerTab.ipAddressLabel=Host name or IP address:
GDBJtagDebuggerTab.portNumberLabel=Port number:
GDBJtagDebuggerTab.connectionLabel=GDB Connection String:
GDBJtagDebuggerTab.update_thread_list_on_suspend=Force thread list update on suspend

# ---

STLinkPreferencePage_description=\
Configure the location where ST STlink is installed. \
The values are not stored as regular preferences, but as \
variables (see String Substitution).\
\n\n\n\
After installing SEGGER updates, restart Eclipse for the \
defaults to be re-evaluated and use the Restore Defaults \
button to configure the new location.\
\n\n\n\n\n\n\n\n\n

STLinkPreferencePage_executable_label=Executable:
STLinkPropertyPage_executable_folder=Folder:

Variable_executable_description=Name of the STlink executable
Variable_path_description=Path to the STlink installation folder
